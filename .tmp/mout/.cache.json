{"_id":"mout","_rev":"33-06cac8e632d79b3674b065eb21b666b6","name":"mout","description":"Modular Utilities","dist-tags":{"latest":"0.8.0"},"versions":{"0.1.0":{"name":"mout","description":"Modular Utilities","version":"0.1.0","homepage":"http://mout.github.com/mout/","author":{"name":"Miller Medeiros","url":"http://blog.millermedeiros.com"},"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.0.28","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5"},"readme":"# mout #\n\nModular JavaScript Utilities.\n\nhttp://mout.github.com/\n\n[![Build Status](https://secure.travis-ci.org/mout/mout.png)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n\n## Node.js ##\n\nmout also works on [node.js](http://nodejs.org), just run:\n\n    npm install mout\n\nIt will download mout from the NPM repository and convert the AMD modules into\na node.js compatible format using\n[nodefy](https://github.com/millermedeiros/nodefy), there is no extra\noverhead, you can use it like a regular node.js package.\n\n    // you can load individual methods\n    var map = require('mout/array/map');\n    map([1, 2], function(v){ return val * val; }); // [1, 4]\n\n    // a single package\n    var stringUtils = require('mout/string');\n    stringUtils.camelCase('Foo Bar'); // \"fooBar\"\n\n    // or the whole lib\n    var utils = require('mout');\n    console.log( utils.math.clamp(100, 0, 50) ); // 50\n\n\n\n## Important ##\n\nSince code is very modular (broken into multiple files) it is really important\nthat you run an optimizer before deploying the code to a server, otherwise you\nmay end up having too many file requests which can [degrade load-time\nperformance](http://developer.yahoo.com/performance/rules.html#num_http) a lot.\nSee [RequireJS optimization](http://requirejs.org/docs/optimization.html) for\nmore info.\n\n\n\n## Contributing ##\n\nFork the project on Github: https://github.com/mout/mout\n\n > \"Write clearly, don't be too clever\" - The Elements of Programming Style\n\nAvoid unnamed functions and follow the other modules structure. By only using\nnamed functions it will be easier to extract the code from the AMD module if\nneeded and it will also give better error messages, JavaScript minifiers like\n[Google Closure Compiler](http://code.google.com/closure/compiler/) and\n[UglifyJS](https://github.com/mishoo/UglifyJS) will make sure code is as\nsmall/optimized as possible.\n\n > \"Make it clear before you make it faster.\" - The Elements of Programming Style\n\nBe sure to always create tests for each proposed module. Features will only be\nmerged if they contain proper tests and documentation.\n\n > \"Good code is its own best documentation.\" - Steve McConnell\n\nWe should do a code review before merging to make sure names makes sense and\nimplementation is as good as possible.\n\nCheck the [contributors list at github](https://github.com/mout/mout/contributors).\n\n\n## Build Script ##\n\nThe build script have a set of very helpful commands, run `npm install --dev`\n(only required once) and then check the available commands:\n\n    node build --help\n\n\n### Keeping packages and specs in sync ###\n\nThe build script can be used to update packages and specs files:\n\n    node build pkg\n\nThe packages/specs are automatically updated every time you run `npm test` as\nwell.\n\nYou can also add new modules with the command `node build add\npackage/moduleName`, this will create a new module `src/package/moduleName.js`\nand also a failing spec `tests/spec/package/spec-moduleName.js`.\n\n\n### Tests & Code Coverage ###\n\nTests can be found inside the `tests` folder, to execute them in the browser\nopen the `tests/runner.html`. The same tests also work on node.js by running\n`npm test`.\n\nWe should have tests for all methods and ensure we have a high code coverage\nthrough our continuous integration server\n([travis](https://travis-ci.org/mout/mout)). When you ask for\na pull request Travis will automatically run the tests on node.js and check the\ncode coverage as well.\n\nWe run `node build pkg` automatically before any `npm test`, so specs and\npackages should always be in sync. (will avoid human mistakes)\n\nTo check code coverage run `npm test --coverage`, it will generate the reports\ninside the `coverage` folder and also log the results. Please note that node.js\ndoesn't execute all code branches since we have some conditionals that are only\nmet on old JavaScript engines (eg. IE 7-8), so we will never have 100% code\ncoverage (but should be close to it).\n\n\n### Building The Documentation ###\n\nThe documentation is generated based on markdown files inside the\n`doc` folder using [mdoc](https://github.com/millermedeiros/mdoc).\nTo compile the docs run:\n\n    node build doc\n\nIt will replace all the files inside the `doc_html` folder.\n\nDocumentation files should be always up-to-date since modules are only\ncommitted to the `master` branch after they get proper tests and documentation.\nOnline documentation can be found at http://mout.github.com/docs/\n\n\n\n## Why AMD as the authoring format? ##\n\n**Because AMD is awesome!**\n\nBy keeping each function in a separate package we can require just the\nmethods/packages that are required by our app and let the RequireJS optimizer\nbundle only what is currently being used. We also have an extra benefit that we\nsplit the methods into separate packages so we reduce the chance of name\ncollisions and the code is more organized. AMD is flexible and enables things\nthat wouldn't be possible with a different module system or with a conventional\nnamespace approach (remapping a module, conditionally loading, etc).\n\nRead these links if you still can't see why:\n\n - [Why AMD?](http://requirejs.org/docs/whyamd.html)\n - [AMD is better for the web than CJS modules](blog.millermedeiros.com/2011/09/amd-is-better-for-the-web-than-commonjs-modules/)\n - [AMD & CommonJS modules](http://briancavalier.com/presentations/pgh-js-amd-10-2011/)\n - [AMD vs. CJS](http://unscriptable.com/index.php/2011/09/30/amd-versus-cjs-whats-the-best-format/)\n - [Namespaces are Old School](http://blog.millermedeiros.com/namespaces-are-old-school/)\n\nAlso since most node.js modules are installed through npm it's easier to write\nit using the AMD format and them convert into a node.js compatible format\nduring `npm publish` or before each `npm test`.  We use\n[nodefy](https://github.com/millermedeiros/nodefy) to convert the AMD modules\ninto regular node.js modules so it won't add any extra overhead for you node.js\napps. The opposite approach would be harder to automate.\n\nPS: Your mileage may vary...\n\n\n\n## Documentation ##\n\nOnline documentation can be found at http://mout.github.com/docs or inside the\n`doc` folder.\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.1.0","dist":{"shasum":"d464738b2282153c328648efdecbd1239fee8e68","tarball":"http://registry.npmjs.org/mout/-/mout-0.1.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"}]},"0.2.0":{"name":"mout","description":"Modular Utilities","version":"0.2.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.0.28","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5"},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.2.0","dist":{"shasum":"9a454b7f9cdda0a11b0b7e4b87041885a5e095b9","tarball":"http://registry.npmjs.org/mout/-/mout-0.2.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.3.0":{"name":"mout","description":"Modular Utilities","version":"0.3.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.0.28","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3"},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.3.0","dist":{"shasum":"0b6f353203e5a2929e9f52b4a13a6bc245b289e8","tarball":"http://registry.npmjs.org/mout/-/mout-0.3.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.4.0":{"name":"mout","description":"Modular Utilities","version":"0.4.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.2.2","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3"},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/?channels=moutjs)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.4.0","dist":{"shasum":"62d1b8854faca021e12edde987a9b85108910ca1","tarball":"http://registry.npmjs.org/mout/-/mout-0.4.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.5.0":{"name":"mout","description":"Modular Utilities","version":"0.5.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.2.2","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3"},"testling":{"preprocess":"node build testling","browsers":{"ie":[7,8,9,10],"firefox":[17,"nightly"],"chrome":[23,"canary"],"opera":[12,"next"],"safari":[5.1,6],"iphone":[6],"ipad":[6]},"scripts":["tests/lib/jasmine/jasmine.js","tests/lib/jasmine/jasmine.async.js","tests/lib/jasmine/jasmine-tap.js","tests/lib/requirejs/require.js","tests/testling/src.js","tests/testling/specs.js","tests/runner.js"]},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/?channels=moutjs)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.5.0","dist":{"shasum":"ff967566a90f29595e9cb8b6e7800a5b56635583","tarball":"http://registry.npmjs.org/mout/-/mout-0.5.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.6.0":{"name":"mout","description":"Modular Utilities","version":"0.6.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.2.2","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3"},"testling":{"preprocess":"node build testling","browsers":{"ie":[7,8,9,10],"firefox":[17,"nightly"],"chrome":[23,"canary"],"opera":[12,"next"],"safari":[5.1,6],"iphone":[6],"ipad":[6]},"scripts":["tests/lib/jasmine/jasmine.js","tests/lib/jasmine/jasmine.async.js","tests/lib/jasmine/jasmine-tap.js","tests/lib/requirejs/require.js","tests/testling/src.js","tests/testling/specs.js","tests/runner.js"]},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/?channels=moutjs)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.6.0","dist":{"shasum":"ce7abad8130d796b09d7fb509bcc73b09be024a6","tarball":"http://registry.npmjs.org/mout/-/mout-0.6.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.7.0":{"name":"mout","description":"Modular Utilities","version":"0.7.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.2.2","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3","jshint":"2.x"},"testling":{"preprocess":"node build testling","browsers":{"ie":[7,8,9,10],"firefox":[17,"nightly"],"chrome":[23,"canary"],"opera":[12,"next"],"safari":[5.1,6],"iphone":[6],"ipad":[6]},"scripts":["tests/lib/jasmine/jasmine.js","tests/lib/jasmine/jasmine.async.js","tests/lib/jasmine/jasmine-tap.js","tests/lib/requirejs/require.js","tests/testling/src.js","tests/testling/specs.js","tests/runner.js"]},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/?channels=moutjs)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","_id":"mout@0.7.0","dist":{"shasum":"cc30aafc1e325bbd3c4c5189684061c8ed4c2a6b","tarball":"http://registry.npmjs.org/mout/-/mout-0.7.0.tgz"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.7.1":{"name":"mout","description":"Modular Utilities","version":"0.7.1","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"prepublish":"node build cjs .","pretest":"node build pkg","test":"node node_modules/istanbul/lib/cli test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.2.2","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3","jshint":"2.x"},"testling":{"preprocess":"node build testling","browsers":{"ie":[7,8,9,10],"firefox":[17,"nightly"],"chrome":[23,"canary"],"opera":[12,"next"],"safari":[5.1,6],"iphone":[6],"ipad":[6]},"scripts":["tests/lib/jasmine/jasmine.js","tests/lib/jasmine/jasmine.async.js","tests/lib/jasmine/jasmine-tap.js","tests/lib/requirejs/require.js","tests/testling/src.js","tests/testling/specs.js","tests/runner.js"]},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/?channels=moutjs)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","readmeFilename":"README.md","_id":"mout@0.7.1","dist":{"shasum":"218de2b0880b220d99f4fbaee3fc0c3a5310bda8","tarball":"http://registry.npmjs.org/mout/-/mout-0.7.1.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"millermedeiros","email":"miller@millermedeiros.com"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]},"0.8.0":{"name":"mout","description":"Modular Utilities","version":"0.8.0","homepage":"http://moutjs.com/","contributors":[{"name":"Adam Nowotny"},{"name":"Andr√© Cruz","email":"amdfcruz@gmail.com"},{"name":"Conrad Zimmerman","url":"http://www.conradz.com"},{"name":"Friedemann Altrock","email":"frodenius@gmail.com"},{"name":"Igor Almeida","email":"igor.p.almeida@gmail.com"},{"name":"Jarrod Overson","url":"http://jarrodoverson.com"},{"name":"Miller Medeiros","email":"contact@millermedeiros.com","url":"http://blog.millermedeiros.com"},{"name":"Mathias Paumgarten","email":"mail@mathias-paumgarten.com"},{"name":"Zach Shipley"}],"keywords":["utilities","functional","amd-utils","stdlib"],"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bugs":{"url":"https://github.com/mout/mout/issues/"},"main":"./index.js","scripts":{"pretest":"node build pkg","test":"istanbul test tests/runner.js --hook-run-in-context"},"directories":{"doc":"./doc"},"devDependencies":{"istanbul":"~0.1.27","jasmine-node":"~1.2.2","requirejs":"2.x","nodefy":"*","mdoc":"~0.3.2","handlebars":"~1.0.6","commander":"~1.0.5","rocambole":"~0.2.3","jshint":"2.x","rimraf":"~2.2.2"},"testling":{"preprocess":"node build testling","browsers":{"ie":[7,8,9,10],"firefox":[17,"nightly"],"chrome":[23,"canary"],"opera":[12,"next"],"safari":[5.1,6],"iphone":[6],"ipad":[6]},"scripts":["tests/lib/jasmine/jasmine.js","tests/lib/jasmine/jasmine.async.js","tests/lib/jasmine/jasmine-tap.js","tests/lib/requirejs/require.js","tests/testling/src.js","tests/testling/specs.js","tests/runner.js"]},"readme":"![mout](http://moutjs.com/logo.png \"Modular JavaScript Utilties\")\n\nhttp://moutjs.com/\n\n[![Build Status](https://travis-ci.org/mout/mout.png?branch=master)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n## API Documentation ##\n\nOnline documentation can be found at http://moutjs.com/ or inside the\n`doc` folder.\n\n\n\n## FAQ / Wiki / IRC ##\n\nFor more info about project structure, design decisions, tips, how to\ncontribute, build system, etc, please check the [project\nwiki](https://github.com/mout/mout/wiki).\n\nWe also have an IRC channel [#moutjs on\nirc.freenode.net](http://webchat.freenode.net/?channels=moutjs)\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","readmeFilename":"README.md","_id":"mout@0.8.0","dist":{"shasum":"bb19f7d65ed980d3922d11dc19ecef9e86558147","tarball":"http://registry.npmjs.org/mout/-/mout-0.8.0.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"millermedeiros","email":"miller@millermedeiros.com"},"maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"}]}},"readme":"# mout #\n\nModular JavaScript Utilities.\n\nhttp://mout.github.com/\n\n[![Build Status](https://secure.travis-ci.org/mout/mout.png)](https://travis-ci.org/mout/mout)\n\nAll code is library agnostic and consist mostly of helper methods that aren't\ndirectly related with the DOM, the purpose of this library isn't to replace\nDojo, jQuery, YUI, Mootools, etc, but to provide modular solutions for common\nproblems that aren't solved by most of them. Consider it as a crossbrowser\nJavaScript standard library.\n\n\n\n## Main goals ##\n\n - increase code reuse;\n - be clear (code should be clean/readable);\n - be easy to debug;\n - be easy to maintain;\n - follow best practices;\n - follow standards when possible;\n - **don't convert JavaScript into another language!**\n - be compatible with other frameworks;\n - be modular;\n - have unit tests for all modules;\n - work on multiple environments (IE7+, modern browsers, node.js);\n\n\n\n## What shouldn't be here ##\n\n - UI components;\n - CSS selector engine;\n - Event system - pub/sub;\n - Template engine;\n - Anything that isn't generic enough to be on a standard library;\n - Anything that could be a separate library and/or isn't a modular utility...\n\n\n\n\n## Node.js ##\n\nmout also works on [node.js](http://nodejs.org), just run:\n\n    npm install mout\n\nIt will download mout from the NPM repository and convert the AMD modules into\na node.js compatible format using\n[nodefy](https://github.com/millermedeiros/nodefy), there is no extra\noverhead, you can use it like a regular node.js package.\n\n    // you can load individual methods\n    var map = require('mout/array/map');\n    map([1, 2], function(v){ return val * val; }); // [1, 4]\n\n    // a single package\n    var stringUtils = require('mout/string');\n    stringUtils.camelCase('Foo Bar'); // \"fooBar\"\n\n    // or the whole lib\n    var utils = require('mout');\n    console.log( utils.math.clamp(100, 0, 50) ); // 50\n\n\n\n## Important ##\n\nSince code is very modular (broken into multiple files) it is really important\nthat you run an optimizer before deploying the code to a server, otherwise you\nmay end up having too many file requests which can [degrade load-time\nperformance](http://developer.yahoo.com/performance/rules.html#num_http) a lot.\nSee [RequireJS optimization](http://requirejs.org/docs/optimization.html) for\nmore info.\n\n\n\n## Contributing ##\n\nFork the project on Github: https://github.com/mout/mout\n\n > \"Write clearly, don't be too clever\" - The Elements of Programming Style\n\nAvoid unnamed functions and follow the other modules structure. By only using\nnamed functions it will be easier to extract the code from the AMD module if\nneeded and it will also give better error messages, JavaScript minifiers like\n[Google Closure Compiler](http://code.google.com/closure/compiler/) and\n[UglifyJS](https://github.com/mishoo/UglifyJS) will make sure code is as\nsmall/optimized as possible.\n\n > \"Make it clear before you make it faster.\" - The Elements of Programming Style\n\nBe sure to always create tests for each proposed module. Features will only be\nmerged if they contain proper tests and documentation.\n\n > \"Good code is its own best documentation.\" - Steve McConnell\n\nWe should do a code review before merging to make sure names makes sense and\nimplementation is as good as possible.\n\nCheck the [contributors list at github](https://github.com/mout/mout/contributors).\n\n\n## Build Script ##\n\nThe build script have a set of very helpful commands, run `npm install --dev`\n(only required once) and then check the available commands:\n\n    node build --help\n\n\n### Keeping packages and specs in sync ###\n\nThe build script can be used to update packages and specs files:\n\n    node build pkg\n\nThe packages/specs are automatically updated every time you run `npm test` as\nwell.\n\nYou can also add new modules with the command `node build add\npackage/moduleName`, this will create a new module `src/package/moduleName.js`\nand also a failing spec `tests/spec/package/spec-moduleName.js`.\n\n\n### Tests & Code Coverage ###\n\nTests can be found inside the `tests` folder, to execute them in the browser\nopen the `tests/runner.html`. The same tests also work on node.js by running\n`npm test`.\n\nWe should have tests for all methods and ensure we have a high code coverage\nthrough our continuous integration server\n([travis](https://travis-ci.org/mout/mout)). When you ask for\na pull request Travis will automatically run the tests on node.js and check the\ncode coverage as well.\n\nWe run `node build pkg` automatically before any `npm test`, so specs and\npackages should always be in sync. (will avoid human mistakes)\n\nTo check code coverage run `npm test --coverage`, it will generate the reports\ninside the `coverage` folder and also log the results. Please note that node.js\ndoesn't execute all code branches since we have some conditionals that are only\nmet on old JavaScript engines (eg. IE 7-8), so we will never have 100% code\ncoverage (but should be close to it).\n\n\n### Building The Documentation ###\n\nThe documentation is generated based on markdown files inside the\n`doc` folder using [mdoc](https://github.com/millermedeiros/mdoc).\nTo compile the docs run:\n\n    node build doc\n\nIt will replace all the files inside the `doc_html` folder.\n\nDocumentation files should be always up-to-date since modules are only\ncommitted to the `master` branch after they get proper tests and documentation.\nOnline documentation can be found at http://mout.github.com/docs/\n\n\n\n## Why AMD as the authoring format? ##\n\n**Because AMD is awesome!**\n\nBy keeping each function in a separate package we can require just the\nmethods/packages that are required by our app and let the RequireJS optimizer\nbundle only what is currently being used. We also have an extra benefit that we\nsplit the methods into separate packages so we reduce the chance of name\ncollisions and the code is more organized. AMD is flexible and enables things\nthat wouldn't be possible with a different module system or with a conventional\nnamespace approach (remapping a module, conditionally loading, etc).\n\nRead these links if you still can't see why:\n\n - [Why AMD?](http://requirejs.org/docs/whyamd.html)\n - [AMD is better for the web than CJS modules](blog.millermedeiros.com/2011/09/amd-is-better-for-the-web-than-commonjs-modules/)\n - [AMD & CommonJS modules](http://briancavalier.com/presentations/pgh-js-amd-10-2011/)\n - [AMD vs. CJS](http://unscriptable.com/index.php/2011/09/30/amd-versus-cjs-whats-the-best-format/)\n - [Namespaces are Old School](http://blog.millermedeiros.com/namespaces-are-old-school/)\n\nAlso since most node.js modules are installed through npm it's easier to write\nit using the AMD format and them convert into a node.js compatible format\nduring `npm publish` or before each `npm test`.  We use\n[nodefy](https://github.com/millermedeiros/nodefy) to convert the AMD modules\ninto regular node.js modules so it won't add any extra overhead for you node.js\napps. The opposite approach would be harder to automate.\n\nPS: Your mileage may vary...\n\n\n\n## Documentation ##\n\nOnline documentation can be found at http://mout.github.com/docs or inside the\n`doc` folder.\n\n\n\n## License ##\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n","maintainers":[{"name":"millermedeiros","email":"miller@millermedeiros.com"},{"name":"satazor","email":"andremiguelcruz@msn.com"},{"name":"conradz","email":"me@conradz.com"},{"name":"mathias.paumgarten","email":"mail@mathias-paumgarten.com"}],"time":{"0.1.0":"2013-01-09T22:40:23.175Z","0.2.0":"2013-01-13T18:01:15.587Z","0.3.0":"2013-02-01T14:24:24.889Z","0.4.0":"2013-02-26T13:27:10.641Z","0.5.0":"2013-04-04T18:20:11.187Z","0.6.0":"2013-05-22T12:59:55.725Z","0.7.0":"2013-09-05T21:35:32.472Z","0.7.1":"2013-09-19T12:44:48.684Z","0.8.0":"2013-11-22T14:34:06.299Z"},"author":{"name":"Miller Medeiros","url":"http://blog.millermedeiros.com"},"repository":{"type":"git","url":"git://github.com/mout/mout.git"},"users":{"marcooliveira":true,"millermedeiros":true,"conradz":true},"_attachments":{"mout-0.8.0.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-l0gy6Pv3Fye01jIWykifbQ==","length":110186,"stub":true},"mout-0.7.1.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-ye69QzPKSwk7p3x7Z7GtZg==","length":105743,"stub":true},"mout-0.7.0.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-oBtIURS/fUfh6XLFYWq94w==","length":105809,"stub":true},"mout-0.6.0.tgz":{"content_type":"application/octet-stream","revpos":16,"digest":"md5-qJmHYjYSRiQrrkwrDQKjVA==","length":102018,"stub":true},"mout-0.5.0.tgz":{"content_type":"application/octet-stream","revpos":14,"digest":"md5-1yXTa1jXQEcmh+gmtiRDGA==","length":90021,"stub":true},"mout-0.4.0.tgz":{"content_type":"application/octet-stream","revpos":12,"digest":"md5-806tM+FJoeohen8k+eOCEQ==","length":216697,"stub":true},"mout-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":10,"digest":"md5-n8pq6VTCY4T8lDBlMh4Pag==","length":204339,"stub":true},"mout-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-H2VG4mknM5iM5KqwQ7nCWg==","length":76205,"stub":true},"mout-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-lmvx3n2s4jhRkjAE0dMzzA==","length":78458,"stub":true}},"_etag":"\"97W2Y3M3XHV2BDH3YT6E3P9GZ\""}