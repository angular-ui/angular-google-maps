{"_id":"read","_rev":"37-6989fc7fe8b95b2b32ab6469b300c0a9","name":"read","description":"read(1) for node programs","dist-tags":{"latest":"1.0.5"},"versions":{"0.0.1":{"name":"read","version":"0.0.1","main":"lib/read.js","dependencies":{},"devDependencies":{},"engines":{"node":">=0.6"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"_npmUser":{"name":"isaacs","email":"i@izs.me"},"_id":"read@0.0.1","_engineSupported":true,"_npmVersion":"1.1.0-alpha-6","_nodeVersion":"v0.6.6-pre","_defaultsLoaded":true,"dist":{"shasum":"05088b1788502bca9dba6667d8e87d17871c9574","tarball":"http://registry.npmjs.org/read/-/read-0.0.1.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"0.0.2":{"name":"read","version":"0.0.2","main":"lib/read.js","dependencies":{},"devDependencies":{},"engines":{"node":">=0.6"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","_npmUser":{"name":"isaacs","email":"i@izs.me"},"_id":"read@0.0.2","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.15","_nodeVersion":"v0.7.7","_defaultsLoaded":true,"dist":{"shasum":"989679f16006199e94b90fc8cd3f8255b123a5ff","tarball":"http://registry.npmjs.org/read/-/read-0.0.2.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"0.0.3":{"name":"read","version":"0.0.3","main":"lib/read.js","dependencies":{},"devDependencies":{},"engines":{"node":">=0.6"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","_npmUser":{"name":"isaacs","email":"i@izs.me"},"_id":"read@0.0.3","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.7.10-pre","_defaultsLoaded":true,"dist":{"shasum":"dbb8629311f590b2f935eedbddff70a111cc834b","tarball":"http://registry.npmjs.org/read/-/read-0.0.3.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"0.1.0":{"name":"read","version":"0.1.0","main":"lib/read.js","dependencies":{},"devDependencies":{"tap":"*"},"engines":{"node":">=0.6"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"For reading user input from stdin.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, in the traditional `callback(error, result)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `num` Max number of chars to read from terminal.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n\nIf silent is true, or num is set, and the input is a TTY,\nthen read will set raw mode, and read  character by character.\n\nAt this time, backspace and arrow keys are not supported very well.\nIt's probably not too hard to add support for this, perhaps using node's\nbuilt-in readline module.\n\n## CONTRIBUTING\n\nPatches welcome.\n\n## BUGS\n\nIn node 0.6.0 through 0.6.5, you must explicitly call\n`process.stdin.destroy()` or `process.exit()` when you know that your\nprogram is done reading, or else it will keep the event loop running\nforever.\n\nSee: <https://github.com/joyent/node/issues/2257>\n","_id":"read@0.1.0","dist":{"shasum":"5fc4d3fef825e449fa71441496ca0c573ec868eb","tarball":"http://registry.npmjs.org/read/-/read-0.1.0.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"0.1.1":{"name":"read","version":"0.1.1","main":"lib/read.js","dependencies":{},"devDependencies":{"tap":"*"},"engines":{"node":">=0.6"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"For reading user input from stdin.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, in the traditional `callback(error, result)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `num` Max number of chars to read from terminal.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `stdin` Readable stream to get input data from. (default `process.stdin`)\n* `stdout` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, or num is set, and the input is a TTY,\nthen read will set raw mode, and read character by character.\n\nAt this time, backspace and arrow keys are not supported very well.\nIt's probably not too hard to add support for this, perhaps using node's\nbuilt-in readline module.\n\n## CONTRIBUTING\n\nPatches welcome.\n\n## BUGS\n\nIn node 0.6.0 through 0.6.5, you must explicitly call\n`process.stdin.destroy()` or `process.exit()` when you know that your\nprogram is done reading, or else it will keep the event loop running\nforever.\n\nSee: <https://github.com/joyent/node/issues/2257>\n","_id":"read@0.1.1","dist":{"shasum":"8ef67ab7b7671e7ad4e2e86802abaf75bfd89c9e","tarball":"http://registry.npmjs.org/read/-/read-0.1.1.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"1.0.0":{"name":"read","version":"1.0.0","main":"lib/read.js","dependencies":{"mute-stream":"0"},"devDependencies":{"tap":"*"},"engines":{"node":">=0.8"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, as `callback(error, result, isDefault)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `stdin` Readable stream to get input data from. (default `process.stdin`)\n* `stdout` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## CONTRIBUTING\n\nPatches welcome.\n","_id":"read@1.0.0","dist":{"shasum":"8f90ce16e526be94f613d5591cf30f3ed436f585","tarball":"http://registry.npmjs.org/read/-/read-1.0.0.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"1.0.1":{"name":"read","version":"1.0.1","main":"lib/read.js","dependencies":{"mute-stream":"0"},"devDependencies":{"tap":"*"},"engines":{"node":">=0.8"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, as `callback(error, result, isDefault)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `stdin` Readable stream to get input data from. (default `process.stdin`)\n* `stdout` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## CONTRIBUTING\n\nPatches welcome.\n","_id":"read@1.0.1","dist":{"shasum":"f6c4431e761b8fcbe869f6f347b6f227bba7ea79","tarball":"http://registry.npmjs.org/read/-/read-1.0.1.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"1.0.2":{"name":"read","version":"1.0.2","main":"lib/read.js","dependencies":{"mute-stream":"~0.0.2"},"devDependencies":{"tap":"*"},"engines":{"node":">=0.8"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, as `callback(error, result, isDefault)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `replace` Replace silenced characters with the supplied character value.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `stdin` Readable stream to get input data from. (default `process.stdin`)\n* `stdout` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## CONTRIBUTING\n\nPatches welcome.\n","_id":"read@1.0.2","dist":{"shasum":"4f0e5b15f90e8c6d3ef3e7f7f537165924bd9d6e","tarball":"http://registry.npmjs.org/read/-/read-1.0.2.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"1.0.3":{"name":"read","version":"1.0.3","main":"lib/read.js","dependencies":{"mute-stream":"~0.0.2"},"devDependencies":{"tap":"*"},"engines":{"node":">=0.8"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, as `callback(error, result, isDefault)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `replace` Replace silenced characters with the supplied character value.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `stdin` Readable stream to get input data from. (default `process.stdin`)\n* `stdout` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## CONTRIBUTING\n\nPatches welcome.\n","_id":"read@1.0.3","dist":{"shasum":"a4e99c7166e30114be40a2769af67a6b85296361","tarball":"http://registry.npmjs.org/read/-/read-1.0.3.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"1.0.4":{"name":"read","version":"1.0.4","main":"lib/read.js","dependencies":{"mute-stream":"~0.0.2"},"devDependencies":{"tap":"*"},"engines":{"node":">=0.8"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, as `callback(error, result, isDefault)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `replace` Replace silenced characters with the supplied character value.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `stdin` Readable stream to get input data from. (default `process.stdin`)\n* `stdout` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## COMPATIBILITY\n\nThis module works sort of with node 0.6.  It does not work with node\nversions less than 0.6.  It is best on node 0.8.\n\nOn node version 0.6, it will remove all listeners on the input\nstream's `data` and `keypress` events, because the readline module did\nnot fully clean up after itself in that version of node, and did not\nmake it possible to clean up after it in a way that has no potential\nfor side effects.\n\nAdditionally, some of the readline options (like `terminal`) will not\nfunction in versions of node before 0.8, because they were not\nimplemented in the builtin readline module.\n\n## CONTRIBUTING\n\nPatches welcome.\n","_id":"read@1.0.4","dist":{"shasum":"c2374be81787fc8633602a1b98232569d52fc655","tarball":"http://registry.npmjs.org/read/-/read-1.0.4.tgz"},"_npmVersion":"1.1.49","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}},"1.0.5":{"name":"read","version":"1.0.5","main":"lib/read.js","dependencies":{"mute-stream":"~0.0.4"},"devDependencies":{"tap":"*"},"engines":{"node":">=0.8"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"description":"read(1) for node programs","repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"license":"BSD","scripts":{"test":"tap test/*.js"},"readme":"## read\n\nFor reading user input from stdin.\n\nSimilar to the `readline` builtin's `question()` method, but with a\nfew more features.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, as `callback(error, result, isDefault)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `replace` Replace silenced characters with the supplied character value.\n* `timeout` Number of ms to wait for user input before giving up.\n* `default` The default value if the user enters nothing.\n* `edit` Allow the user to edit the default value.\n* `terminal` Treat the output as a TTY, whether it is or not.\n* `input` Readable stream to get input data from. (default `process.stdin`)\n* `output` Writeable stream to write prompts to. (default: `process.stdout`)\n\nIf silent is true, and the input is a TTY, then read will set raw\nmode, and read character by character.\n\n## COMPATIBILITY\n\nThis module works sort of with node 0.6.  It does not work with node\nversions less than 0.6.  It is best on node 0.8.\n\nOn node version 0.6, it will remove all listeners on the input\nstream's `data` and `keypress` events, because the readline module did\nnot fully clean up after itself in that version of node, and did not\nmake it possible to clean up after it in a way that has no potential\nfor side effects.\n\nAdditionally, some of the readline options (like `terminal`) will not\nfunction in versions of node before 0.8, because they were not\nimplemented in the builtin readline module.\n\n## CONTRIBUTING\n\nPatches welcome.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/isaacs/read/issues"},"_id":"read@1.0.5","dist":{"shasum":"007a3d169478aa710a491727e453effb92e76203","tarball":"http://registry.npmjs.org/read/-/read-1.0.5.tgz"},"_from":".","_npmVersion":"1.3.4","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}],"directories":{}}},"readme":"For reading user input from stdin.\n\n## USAGE\n\n```javascript\nvar read = require(\"read\")\nread(options, callback)\n```\n\nThe callback gets called with either the user input, or the default\nspecified, or an error, in the traditional `callback(error, result)`\nnode style.\n\n## OPTIONS\n\nEvery option is optional.\n\n* `prompt` What to write to stdout before reading input.\n* `silent` Don't echo the output as the user types it.\n* `num` Max number of chars to read from terminal.\n* `delim` The char that means we're done.  Default: `\"\\n\"`\n* `timeout` Number of ms to wait for user input before giving up.\n\nIf silent is true, or num is set, or delim is something other than\n`\"\\n\"`, then read will set raw mode, and read character by character.\n\nAt this time, backspace and arrow keys are not supported in raw mode.\nIt's probably not too hard to add support for this, perhaps using node's\nbuilt-in readline module.\n\n## CONTRIBUTING\n\nPatches welcome.\n","maintainers":[{"name":"isaacs","email":"i@izs.me"}],"time":{"0.0.1":"2011-12-07T00:20:59.773Z","0.0.2":"2012-03-30T22:17:06.064Z","0.0.3":"2012-06-09T00:48:13.399Z","0.1.0":"2012-06-14T01:14:33.721Z","0.1.1":"2012-07-23T18:23:45.370Z","1.0.0":"2012-07-24T07:45:05.670Z","1.0.1":"2012-07-24T08:03:49.226Z","1.0.2":"2012-07-24T22:25:41.620Z","1.0.3":"2012-08-12T03:33:09.169Z","1.0.4":"2012-08-17T00:26:44.028Z","1.0.5":"2013-07-15T01:49:33.993Z"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"repository":{"type":"git","url":"git://github.com/isaacs/read.git"},"users":{"fgribreau":true},"_attachments":{"read-1.0.5.tgz":{"content_type":"application/octet-stream","revpos":36,"digest":"md5-n3Uh3ocCIjBztBL2moH/JA==","length":4261,"stub":true},"read-1.0.4.tgz":{"content_type":"application/octet-stream","revpos":35,"digest":"md5-uIyO4cF4XolGFzOgIODAeg==","length":4154,"stub":true},"read-1.0.3.tgz":{"content_type":"application/octet-stream","revpos":32,"digest":"md5-Ybzk9OH4f4m0qGZL0t62jw==","length":3781,"stub":true},"read-1.0.2.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-a0PS+leOyFAtia36pY7aQw==","length":3266,"stub":true},"read-1.0.1.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-/1v9MMmixu+XLSDwRp7Pmg==","length":3229,"stub":true},"read-1.0.0.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-HbpD7uQLyI1626buHdmkfA==","length":3654,"stub":true},"read-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-c8psyWHGDrjm/qJ2AadPZw==","length":4034,"stub":true},"read-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-qpXgnyTY5Gg4GS0xQVt3Ow==","length":3873,"stub":true},"read-0.0.3.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-Ll+cKN0ovlylVFRvHUbNrw==","length":3443,"stub":true},"read-0.0.2.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-DiaGcV76QKplcmdur9rubw==","length":3392,"stub":true},"read-0.0.1.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-6YmqLHvliL2haAwX+9D/aQ==","length":2524,"stub":true}},"_etag":"\"4N3IT21QWXMI1H83OQTKDVIDT\""}