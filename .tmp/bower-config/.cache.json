{"_id":"bower-config","_rev":"44-59765d234588c2068895b8fc2a779c9c","name":"bower-config","description":"The Bower config reader and writer.","dist-tags":{"latest":"0.5.0"},"versions":{"0.1.0-rc.1":{"name":"bower-config","version":"0.1.0-rc.1","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~1.2.2","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3","rimraf":"~2.2.0"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.1.0-rc.1","dist":{"shasum":"e329def46a02a8d696e0fa7536ff9d400cc34334","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.1.0-rc.1.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.1.0-rc.2":{"name":"bower-config","version":"0.1.0-rc.2","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~1.2.2","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3","rimraf":"~2.2.0"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.1.0-rc.2","dist":{"shasum":"b7597b8fdc1159394f955df6e496973064c51ce9","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.1.0-rc.2.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.1.0-rc.3":{"name":"bower-config","version":"0.1.0-rc.3","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~1.2.2","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.1.0-rc.3","dist":{"shasum":"7fcaff1b1976c6997412cf05011790eea77d2e1a","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.1.0-rc.3.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.1.0-rc.4":{"name":"bower-config","version":"0.1.0-rc.4","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.\nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.1.0-rc.4","dist":{"shasum":"9f5f8a893428e79aae8d2f9147a380e1388d2259","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.1.0-rc.4.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.1.0-rc.5":{"name":"bower-config","version":"0.1.0-rc.5","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.1.0-rc.5","dist":{"shasum":"5add735d53f3ff72ba2bd5e4f58d19d05688f93c","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.1.0-rc.5.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.2.0-rc.1":{"name":"bower-config","version":"0.2.0-rc.1","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.2.0-rc.1","dist":{"shasum":"21122ad61f2adbb9db3cace1612ac256dc04be61","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.2.0-rc.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.2.0-rc.2":{"name":"bower-config","version":"0.2.0-rc.2","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.2.0-rc.2","dist":{"shasum":"1bb91e82f2155ce219764be99451aadacc5edecb","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.2.0-rc.2.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.0":{"name":"bower-config","version":"0.3.0","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.3.0","dist":{"shasum":"abce1be90195c213a190a0d856f613ccec79f703","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.1":{"name":"bower-config","version":"0.3.1","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.3.1","dist":{"shasum":"7d8ffa61ebb9b14de7fa1a7794b92077c7a2f59a","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.3.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.3":{"name":"bower-config","version":"0.3.3","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.3.3","dist":{"shasum":"cbc7e1abdbbd42ca83ede9ebf1be6a40289dab2e","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.3.3.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.4":{"name":"bower-config","version":"0.3.4","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.3.4","dist":{"shasum":"39e8047d4645e5aa78cab63107ad5974e81fb9bb","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.3.4.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.5":{"name":"bower-config","version":"0.3.5","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.3.5","dist":{"shasum":"45fe4d27cc9f98ba3d57ca1a86c95dbdc90e513c","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.3.5.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.4.0":{"name":"bower-config","version":"0.4.0","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.4.0","dist":{"shasum":"3ac19ff53da1d99b685ccb9f0123bec6337fed14","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.4.0.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.4.1":{"name":"bower-config","version":"0.4.1","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.4.1","dist":{"shasum":"76985391babf35bfd37b113caa99e0b58f50bd11","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.4.1.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.4.2":{"name":"bower-config","version":"0.4.2","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.4.2","dist":{"shasum":"e95df65e46970a82a50fa538c52a34c30d2cec7b","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.4.2.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.4.3":{"name":"bower-config","version":"0.4.3","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.4.3","dist":{"shasum":"6d3d9d31967c76daf140eca4b06924b13daccc89","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.4.3.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.4.4":{"name":"bower-config","version":"0.4.4","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.4.4","dist":{"shasum":"33c6a772397f24d46322a294b415128a6e3090ff","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.4.4.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.4.5":{"name":"bower-config","version":"0.4.5","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.4.5","dist":{"shasum":"baa7cee382f53b13bb62a4afaee7c05f20143c13","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.4.5.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.5.0":{"name":"bower-config","version":"0.5.0","description":"The Bower config reader and writer.","author":{"name":"Twitter"},"licenses":[{"type":"MIT","url":"https://github.com/bower/config/blob/master/LICENSE"}],"repository":{"type":"git","url":"git://github.com/bower/config.git"},"main":"lib/Config","homepage":"http://bower.io","engines":{"node":">=0.8.0"},"dependencies":{"graceful-fs":"~2.0.0","mout":"~0.6.0","optimist":"~0.6.0","osenv":"0.0.3"},"devDependencies":{"expect.js":"~0.2.0","mocha":"~1.12.0"},"scripts":{"test":"mocha -R spec"},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.   \nThe config spec can be read [here](https://docs.google.com/document/d/1APq7oA9tNao1UYWyOm8dKqlRP2blVkROYLZ2fLIjtWc/).\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.   \nThe returned configuration is normalised.   \nThe object keys will be camelCase.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n#### #normalise(config)\n\nReturns a new normalised config object based on `config`.   \nObject keys will be converted to camelCase.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/bower/config/issues"},"_id":"bower-config@0.5.0","dist":{"shasum":"d081d43008816b1beb876dee272219851dd4c89c","tarball":"http://registry.npmjs.org/bower-config/-/bower-config-0.5.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}}},"readme":"# bower-config [![Build Status](https://secure.travis-ci.org/bower/config.png?branch=master)](http://travis-ci.org/bower/config)\n\nThe Bower config reader and writer.\n\n\n## Usage\n\n#### .load()\n\nLoads the bower configuration from the configuration files.\n\n\n#### .get(key)\n\nReturns a configuration value by `key`.   \nKeys with dots are supported to access deep values.\n\n\n#### .set(key, value)\n\nSets a configuration value for `key`.   \nKeys with dots are supported to set deep values.\n\n\n#### .del(key)\n\nRemoves configuration named `key`.   \nKeys with dots are supported to delete deep keys.\n\n\n#### .save(where, callback)\n\nSaves changes to `where`.   \nThe `where` argument can be a path to a configuration file or:\n\n- `local` to save it in the configured current working directory (defaulting to `process.cwd`)\n- `user` to save it in the configuration file located in the home directory\n\n\n#### .toObject()\n\nReturns a deep copy of the underlying configuration object.\n\n\n#### #create(cwd)\n\nObtains a instance where `cwd` is the current working directory (defaults to `process.cwd`);\n\n```js\nvar config = require('bower-config').create();\n// You can also specify a working directory\nvar config2 = require('bower-config').create('./some/path');\n```\n\n\n#### #read(cwd)\n\nAlias for:\n\n```js\nvar configObject = (new Config(cwd)).load().toJson();\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"},{"name":"wibblymat","email":"mat@wibbly.org.uk"}],"time":{"0.1.0-rc.1":"2013-07-09T19:58:56.888Z","0.1.0-rc.2":"2013-07-09T22:38:25.029Z","0.1.0-rc.3":"2013-07-10T19:39:41.147Z","0.1.0-rc.4":"2013-07-16T18:53:25.857Z","0.1.0-rc.5":"2013-07-18T18:32:06.835Z","0.2.0-rc.1":"2013-07-28T02:01:08.172Z","0.2.0-rc.2":"2013-08-02T20:13:16.609Z","0.3.0":"2013-08-05T22:40:09.593Z","0.3.1":"2013-08-05T23:03:18.938Z","0.3.3":"2013-08-11T17:25:45.524Z","0.3.4":"2013-08-14T07:37:21.802Z","0.3.5":"2013-08-14T08:11:05.233Z","0.4.0":"2013-08-16T22:56:41.975Z","0.4.1":"2013-08-18T12:09:59.969Z","0.4.2":"2013-08-18T16:29:36.434Z","0.4.3":"2013-08-18T23:58:18.991Z","0.4.4":"2013-08-21T17:46:33.734Z","0.4.5":"2013-08-28T07:21:53.830Z","0.5.0":"2013-08-29T18:54:21.773Z"},"author":{"name":"Twitter"},"repository":{"type":"git","url":"git://github.com/bower/config.git"},"_attachments":{"bower-config-0.5.0.tgz":{"content_type":"application/octet-stream","revpos":38,"digest":"md5-YQkCpMw+vWQYHfWZuKguCg==","length":5484,"stub":true},"bower-config-0.4.5.tgz":{"content_type":"application/octet-stream","revpos":36,"digest":"md5-UQ1msabGwwN5dT/9L69l/g==","length":5456,"stub":true},"bower-config-0.4.4.tgz":{"content_type":"application/octet-stream","revpos":34,"digest":"md5-w7o5K3/mPmJpx13x3QpzoQ==","length":5453,"stub":true},"bower-config-0.4.3.tgz":{"content_type":"application/octet-stream","revpos":32,"digest":"md5-Tsi+W20OsFVopKNpwmZwcw==","length":5277,"stub":true},"bower-config-0.4.2.tgz":{"content_type":"application/octet-stream","revpos":30,"digest":"md5-1W4oQLvTBqNLEvy5nRrQSQ==","length":5233,"stub":true},"bower-config-0.4.1.tgz":{"content_type":"application/octet-stream","revpos":28,"digest":"md5-+dCwpfHUpzJ8NbfKbDu7lw==","length":5236,"stub":true},"bower-config-0.4.0.tgz":{"content_type":"application/octet-stream","revpos":26,"digest":"md5-4OfKs9NyrOcQu2hifHYnEw==","length":5225,"stub":true},"bower-config-0.3.5.tgz":{"content_type":"application/octet-stream","revpos":24,"digest":"md5-v4sDfvUTvCRP46X3ReSzpg==","length":5207,"stub":true},"bower-config-0.3.4.tgz":{"content_type":"application/octet-stream","revpos":22,"digest":"md5-S/ZIox7DRxgn9PA2fecbcg==","length":5199,"stub":true},"bower-config-0.3.3.tgz":{"content_type":"application/octet-stream","revpos":20,"digest":"md5-fyEypcy/1gyOT29GHelkvQ==","length":5173,"stub":true},"bower-config-0.3.1.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-Y7sbi7mO2P3zmlKPlynDgQ==","length":4960,"stub":true},"bower-config-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":16,"digest":"md5-6CMsoRqCOp8gGzzAH9PlMA==","length":4962,"stub":true},"bower-config-0.2.0-rc.2.tgz":{"content_type":"application/octet-stream","revpos":14,"digest":"md5-FJ1Z+BVUZF5hcyJ9dN1csA==","length":4928,"stub":true},"bower-config-0.2.0-rc.1.tgz":{"content_type":"application/octet-stream","revpos":12,"digest":"md5-GHolf0FKZyGUAHXB8esU4w==","length":4921,"stub":true},"bower-config-0.1.0-rc.5.tgz":{"content_type":"application/octet-stream","revpos":10,"digest":"md5-VvPBLTULdqw5KH3VZ2cHmA==","length":4393,"stub":true},"bower-config-0.1.0-rc.4.tgz":{"content_type":"application/octet-stream","revpos":8,"digest":"md5-uwnKr0tgm69RlISUWICnzQ==","length":4361,"stub":true},"bower-config-0.1.0-rc.3.tgz":{"content_type":"application/octet-stream","revpos":6,"digest":"md5-IExxvjexCgxpCOEAOtNqpA==","length":4240,"stub":true},"bower-config-0.1.0-rc.2.tgz":{"content_type":"application/octet-stream","revpos":4,"digest":"md5-gD+co/n5ERVXtrMJ4HeKlQ==","length":4205,"stub":true},"bower-config-0.1.0-rc.1.tgz":{"content_type":"application/octet-stream","revpos":2,"digest":"md5-kBYe22mCuuJC11cffI0Rhw==","length":4204,"stub":true}},"_etag":"\"9LVBJPDJPADKPF878DZHL3F57\""}