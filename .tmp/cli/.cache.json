{"_id":"cli","_rev":"85-2a179b11a5dbdaeb8ac9976a9c822311","name":"cli","description":"A tool for rapidly building command line apps","dist-tags":{"latest":"0.4.5"},"versions":{"0.1.0":{"name":"cli","description":"A command line opts/args parser for node.js","version":"0.1.0","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"./lib","directories":{"lib":"./lib"},"bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT","url":"http://github.com/chriso/node.io/raw/master/LICENSE"}],"_id":"cli@0.1.0","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"40066f20d2193b6508a4faf09cb394dbd2f42519","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.0.tgz"}},"0.1.1":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT","url":"http://github.com/chriso/node.io/raw/master/LICENSE"}],"_id":"cli@0.1.1","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"d353c04bbc2cd74812a089cde66128c48bf5e354","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.1.tgz"},"directories":{}},"0.1.3":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.3","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.3","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"6670647be72f9a3bfb99d0ac071a39e1f179fb83","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.3.tgz"},"directories":{}},"0.1.4":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.4","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.4","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"f1881854eb29dd1be61fa5cf669b126b8de166bc","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.4.tgz"},"directories":{}},"0.1.5":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.5","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.5","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"4feee13c6ef8089f98acdfc5a3b8682066822d4b","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.5.tgz"},"directories":{}},"0.1.6":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.6","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.6","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"7984c77b5d21a2a5bd6365d705a7f4a37d8f2b46","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.6.tgz"},"directories":{}},"0.1.7":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.7","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.7","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"16a609c5c84d7b6195f0e13b0d58f66db9a26b47","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.7.tgz"},"directories":{}},"0.1.8":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.8","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.8","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"8e641421c14dbc67618367b4dd4c71e07cfc7682","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.8.tgz"},"directories":{}},"0.1.9":{"name":"cli","description":"A command line opts/args parser for node","version":"0.1.9","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.1.9","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"005d82883391cbf1c0b67c7ffc6449b1ccd8f650","tarball":"http://registry.npmjs.org/cli/-/cli-0.1.9.tgz"},"directories":{}},"0.2.0":{"name":"cli","description":"A command line opts/args parser for node","version":"0.2.0","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.0","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"71a16636a2663db9bc40b1f30e5499c71011feca","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.0.tgz"},"directories":{}},"0.2.1-1":{"name":"cli","description":"A command line opts/args parser for node","version":"0.2.1-1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.1-1","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"91cd3a5c571894555ed77e66b3181cc1da4a5f49","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.1-1.tgz"},"directories":{}},"0.2.2-1":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.2-1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.2-1","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"3b9df09dfdeb72453163ab6243cfb4ced148ad21","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.2-1.tgz"},"directories":{}},"0.2.3-1":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.3-1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.3-1","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"3cf8911ffed3898f5207a6f19692556e6461a11f","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.3-1.tgz"},"directories":{}},"0.2.3-2":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.3-2","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.3-2","_nodeSupported":true,"_npmVersion":"0.2.12-1","_nodeVersion":"v0.3.1","dist":{"shasum":"61ea70fa5c0fef594cc66398a52d7fd511f5cd52","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.3-2.tgz"},"directories":{}},"0.2.3-3":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.3-3","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.3-3","_engineSupported":true,"_npmVersion":"0.2.14","_nodeVersion":"v0.3.1","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"8509f21e8de02dcf9ed10a6300f485a9f862c26f","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.3-3.tgz"}},"0.2.3-4":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.3-4","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.3-4","_engineSupported":true,"_npmVersion":"0.2.14","_nodeVersion":"v0.3.1","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"e22544cb152785b0dccd4d60f4318ad63f7c25ef","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.3-4.tgz"}},"0.2.3-5":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.3-5","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.3-5","_engineSupported":true,"_npmVersion":"0.2.14-6","_nodeVersion":"v0.3.1","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"3960884d9f592819b2299d899d008e120fa6ce39","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.3-5.tgz"}},"0.2.4-1":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.4-1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.4-1","_engineSupported":true,"_npmVersion":"0.2.14-6","_nodeVersion":"v0.3.1","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"8796402baf011975ba68bb50f9e6b488b9ffa69e","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.4-1.tgz"}},"0.2.4-2":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.4-2","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.4-2","_engineSupported":true,"_npmVersion":"0.2.14-6","_nodeVersion":"v0.3.1","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"ca9d805cc3866d94ee80d9fc8a5e9e81df463bde","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.4-2.tgz"}},"0.2.5":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.5","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.5","_engineSupported":true,"_npmVersion":"0.2.16","_nodeVersion":"v0.2.6","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"c27b331e8409a28761b4d73a4c00d8f067eab0ec","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.5.tgz"}},"0.2.6":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.6","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.6","_engineSupported":true,"_npmVersion":"0.2.17","_nodeVersion":"v0.2.6","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"5e4eaded66413344493ff70a1836bdeb4e519d35","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.6.tgz"}},"0.2.7":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.7","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.7","_engineSupported":true,"_npmVersion":"0.3.7","_nodeVersion":"v0.4.1","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"6fe3db18926aade712018fd72e2656b139b08ef0","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.7.tgz"}},"0.2.8":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.2.8","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_id":"cli@0.2.8","_engineSupported":true,"_npmVersion":"0.3.15","_nodeVersion":"v0.4.2","directories":{},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"c86ac7fc75193bc836c369ca9eff37022ffec559","tarball":"http://registry.npmjs.org/cli/-/cli-0.2.8.tgz"}},"0.3.0":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.0","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.0","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"41852190d974a8d18465a0b1a1ca80c92b31eed1","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.0.tgz"},"scripts":{},"directories":{}},"0.3.1":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.1","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"f56ee983212a3a58b697c614f292b1e8c3f3b9fa","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.1.tgz"},"scripts":{},"directories":{}},"0.3.2":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.2","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.2","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"7b28820e8c3e853b72e30aa4cec0179aa06cdd7f","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.2.tgz"},"scripts":{},"directories":{}},"0.3.3":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.3","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.3","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"4fdc9746165fc8da7048c4733faee289d6112d69","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.3.tgz"},"scripts":{},"directories":{}},"0.3.4":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.4","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.4","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"16bfa95a11fe439486daea2c7db448d1eb34cf5c","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.4.tgz"},"scripts":{},"directories":{}},"0.3.5":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.5","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.5","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"9819d523fab9830b2eeaf7ec9b39918cc9876116","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.5.tgz"},"scripts":{},"directories":{}},"0.3.6":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.6","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"dependencies":{},"devDependencies":{},"_id":"cli@0.3.6","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"f1d627e1300b6afe9575367b1804366d13f81205","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.6.tgz"},"scripts":{},"directories":{}},"0.3.7":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.7","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmJsonOpts":{"file":"/Users/chris/.npm/cli/0.3.7/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"cli@0.3.7","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"1b6dd1f267ce6817e353ecc8a5c231eb8aaf4786","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.7.tgz"},"scripts":{},"directories":{}},"0.3.8":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.8","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmJsonOpts":{"file":"/Users/chris/.npm/cli/0.3.8/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"cli@0.3.8","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.30","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"1d704b92dff637c6bd8baadebd28ca9e1e3c955c","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.8.tgz"},"maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.3.9":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.3.9","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.3.9","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"09d621298aaaf8930fd221047bd3cb5bf12954da","tarball":"http://registry.npmjs.org/cli/-/cli-0.3.9.tgz"},"maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.0":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.0","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.4.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"f3847216f9082dcc1f18ca69677d03f0d7a36a8a","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.0.tgz"},"maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.1":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.4.1","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"ccdf57e56a12525c70b37b4479835764e6927714","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.1.tgz"},"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.2":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.2","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.4.2","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"a40bae340ffa676bbadabfe49307f862fc60ef08","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.2.tgz"},"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.3":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.3","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.4.3","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.18","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"e6819c8d5faa957f64f98f66a8506268c1d1f17d","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.3.tgz"},"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.4":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.4","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.4.4","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"13ceb30872e7c9addc383e5519fb2949ab61ba43","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.4.tgz"},"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.4-1":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.4-1","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"email":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"git://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"_id":"cli@0.4.4-1","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"fee0faf646f110ab862a55daef0a383c385b1ab4","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.4-1.tgz"},"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.4-2":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.4-2","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"mail":"cohara87@gmail.com","url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"cli@0.4.4-2","dist":{"shasum":"a38c8f991df22eea0179ec16dd90fa3f3c85fa4a","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.4-2.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}},"0.4.5":{"name":"cli","description":"A tool for rapidly building command line apps","version":"0.4.5","homepage":"http://github.com/chriso/cli","keywords":["cli","command line","opts","parseopt","opt","args","console","argsparse","optparse","daemon","autocomplete","command","autocompletion"],"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"main":"cli.js","bugs":{"url":"http://github.com/chriso/cli/issues"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"dependencies":{"glob":">= 3.1.4"},"contributors":[{"name":"Douglas Meyer"}],"engines":{"node":">=0.2.5"},"licenses":[{"type":"MIT"}],"readme":"**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire('cli').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet's add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require('cli'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet's create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require('cli').enable('daemon', 'status'); //Enable 2 plugins\n\ncli.parse({\n    log:   ['l', 'Enable logging'],\n    port:  ['p', 'Listen on this port', 'number', 8080],\n    serve: [false, 'Serve static files from PATH', 'path', './public']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug('Enabling logging');\n        middleware.push(require('creationix/log')());\n    }\n\n    this.debug('Serving files from ' + options.serve);\n    middleware.push(require('creationix/static')('/', options.serve, 'index.html'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok('Listening on port ' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof's [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon's pid if it's running), or log (output the daemon's stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"README.md","_id":"cli@0.4.5","dist":{"shasum":"78f9485cd161b566e9a6c72d7170c4270e81db61","tarball":"http://registry.npmjs.org/cli/-/cli-0.4.5.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"cohara87","email":"cohara87@gmail.com"},"maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"directories":{}}},"maintainers":[{"name":"cohara87","email":"cohara87@gmail.com"}],"time":{"0.1.0":"2011-01-01T07:20:54.661Z","0.1.1":"2011-01-02T13:27:25.447Z","0.1.3":"2011-01-04T02:42:21.151Z","0.1.4":"2011-01-04T03:19:13.491Z","0.1.5":"2011-01-04T03:32:32.638Z","0.1.6":"2011-01-04T03:38:58.709Z","0.1.7":"2011-01-04T04:06:48.213Z","0.1.8":"2011-01-04T15:52:54.640Z","0.1.9":"2011-01-05T00:38:36.124Z","0.2.0":"2011-01-05T00:49:43.059Z","0.2.1-1":"2011-01-05T01:10:54.500Z","0.2.2-1":"2011-01-06T07:06:25.999Z","0.2.3-1":"2011-01-06T11:14:50.363Z","0.2.3-2":"2011-01-06T11:23:30.062Z","0.2.3-3":"2011-01-08T10:43:28.459Z","0.2.3-4":"2011-01-08T10:46:18.266Z","0.2.3-5":"2011-01-13T10:24:16.995Z","0.2.4-1":"2011-01-14T23:53:37.722Z","0.2.4-2":"2011-01-15T00:41:57.116Z","0.2.5":"2011-02-01T02:42:51.762Z","0.2.6":"2011-02-02T08:26:08.648Z","0.2.7":"2011-02-25T19:35:19.533Z","0.2.8":"2011-03-12T00:18:59.188Z","0.3.0":"2011-05-13T14:10:02.685Z","0.3.1":"2011-05-16T10:41:43.959Z","0.3.2":"2011-05-19T10:31:56.571Z","0.3.3":"2011-05-19T20:54:12.737Z","0.3.4":"2011-05-22T00:29:04.266Z","0.3.5":"2011-05-24T09:48:14.953Z","0.3.6":"2011-05-24T09:52:11.465Z","0.3.7":"2011-06-30T02:40:00.918Z","0.3.8":"2011-09-19T12:01:18.040Z","0.3.9":"2011-12-31T04:17:46.834Z","0.4.0":"2011-12-31T04:33:32.194Z","0.4.1":"2012-02-24T21:54:29.062Z","0.4.2":"2012-04-10T22:20:38.010Z","0.4.3":"2012-04-29T01:44:35.526Z","0.4.4":"2012-05-17T05:44:14.501Z","0.4.4-1":"2012-05-17T05:46:00.041Z","0.4.4-2":"2012-09-24T09:02:16.133Z","0.4.5":"2013-07-31T10:00:59.062Z"},"author":{"name":"Chris O'Hara","email":"cohara87@gmail.com"},"repository":{"type":"git","url":"http://github.com/chriso/cli.git"},"users":{"dodo":true,"fgribreau":true},"_attachments":{"cli-0.4.5.tgz":{"content_type":"application/octet-stream","revpos":84,"digest":"md5-s+raFeGYZ68p9i+oseMEjA==","length":14587,"stub":true},"cli-0.4.4-2.tgz":{"content_type":"application/octet-stream","revpos":83,"digest":"md5-RsxkP09TfqQAzYCPVgdYGw==","length":14528,"stub":true},"cli-0.4.4-1.tgz":{"content_type":"application/octet-stream","revpos":80,"digest":"md5-RPSshQiZg4zfh0nB9CtWlw==","length":14538,"stub":true},"cli-0.4.4.tgz":{"content_type":"application/octet-stream","revpos":78,"digest":"md5-wiJ2vr+qZaN1fNz4HPFxhg==","length":14542,"stub":true},"cli-0.4.3.tgz":{"content_type":"application/octet-stream","revpos":76,"digest":"md5-GMAWYrTnWfQKX9Oof1HYVQ==","length":14533,"stub":true},"cli-0.4.2.tgz":{"content_type":"application/octet-stream","revpos":74,"digest":"md5-GGy7t6uaoRVhxo1+2+qnaA==","length":14529,"stub":true},"cli-0.4.1.tgz":{"content_type":"application/octet-stream","revpos":72,"digest":"md5-JRwrtCUGgZdF1dPkgcMV4Q==","length":14929,"stub":true},"cli-0.4.0.tgz":{"content_type":"application/octet-stream","revpos":69,"digest":"md5-DDXH4YEWYG94Lvxj70E/MA==","length":20480,"stub":true},"cli-0.3.9.tgz":{"content_type":"application/octet-stream","revpos":67,"digest":"md5-ECADYlmVAm6PyURO9qWGFQ==","length":20480,"stub":true},"cli-0.3.8.tgz":{"content_type":"application/octet-stream","revpos":65,"digest":"md5-rv3Ak0G38Vr9H8MSsDnT0g==","length":14811,"stub":true},"cli-0.3.7.tgz":{"content_type":"application/octet-stream","revpos":63,"digest":"md5-l8dsSufOI5MkZkikNSvkTQ==","length":14810,"stub":true},"cli-0.3.6.tgz":{"content_type":"application/octet-stream","revpos":61,"digest":"md5-fPYMM/eqxtSbWV7mDt5OiA==","length":14903,"stub":true},"cli-0.3.5.tgz":{"content_type":"application/octet-stream","revpos":59,"digest":"md5-eeqwLGm+QdV6L7XwQwmVJg==","length":14866,"stub":true},"cli-0.3.4.tgz":{"content_type":"application/octet-stream","revpos":57,"digest":"md5-ENIFHpSkVJy+UKzierg4jQ==","length":14851,"stub":true},"cli-0.3.3.tgz":{"content_type":"application/octet-stream","revpos":55,"digest":"md5-2oH2kUes49chUFcWfZJHbQ==","length":14841,"stub":true},"cli-0.3.2.tgz":{"content_type":"application/octet-stream","revpos":53,"digest":"md5-LKluydoWq9FWjKqzLUyP3Q==","length":14842,"stub":true},"cli-0.3.1.tgz":{"content_type":"application/octet-stream","revpos":51,"digest":"md5-ynGamcN88CIFI72XrMX7Hw==","length":14763,"stub":true},"cli-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":49,"digest":"md5-Xdpe3F8HlefR7pi1xbSZAg==","length":14291,"stub":true},"cli-0.2.8.tgz":{"content_type":"application/octet-stream","revpos":47,"digest":"md5-6/PhPF+t9IttSEUP2Sklfg==","length":18966,"stub":true},"cli-0.2.7.tgz":{"content_type":"application/octet-stream","revpos":45,"digest":"md5-U1iDCopFsZ9+ruRyrBeWxQ==","length":18951,"stub":true},"cli-0.2.6.tgz":{"content_type":"application/octet-stream","revpos":43,"digest":"md5-NAaunFpjFw8C31yIp3pJyA==","length":18914,"stub":true},"cli-0.2.5.tgz":{"content_type":"application/octet-stream","revpos":41,"digest":"md5-0mHwzNEudwI6t1dIpsbOJQ==","length":18467,"stub":true},"cli-0.2.4-2.tgz":{"content_type":"application/octet-stream","revpos":39,"digest":"md5-jsk7szIbyLdc1CwVOiDyIw==","length":18673,"stub":true},"cli-0.2.4-1.tgz":{"content_type":"application/octet-stream","revpos":37,"digest":"md5-KAUCvZKe1r1GWvrw0UpvQg==","length":18365,"stub":true},"cli-0.2.3-5.tgz":{"content_type":"application/octet-stream","revpos":35,"digest":"md5-jmbm3Lk5nvtTCCxxomHSgA==","length":18098,"stub":true},"cli-0.2.3-4.tgz":{"content_type":"application/octet-stream","revpos":33,"digest":"md5-cJwK06BatzHDZWlKAlh+lA==","length":18094,"stub":true},"cli-0.2.3-3.tgz":{"content_type":"application/octet-stream","revpos":31,"digest":"md5-oXhkRjAAnolsUp1ovBngiQ==","length":18099,"stub":true},"cli-0.2.3-2.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-orcClTKmCN3gYjC4su6ATQ==","length":18052,"stub":true},"cli-0.2.3-1.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-LULSsW32kSr9H7t9qANdjg==","length":18028,"stub":true},"cli-0.2.2-1.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-wkkqI0rq3o/W2ZzbmNZjKA==","length":16880,"stub":true},"cli-0.2.1-1.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-PbwxB0b0hpSYjWK7N1Gs6w==","length":16298,"stub":true},"cli-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-RRy8A7j5TpumhH26aTFKHQ==","length":16285,"stub":true},"cli-0.1.9.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-rRzd9m1/EvXQdC7SxYp4ew==","length":16292,"stub":true},"cli-0.1.8.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-Jj8lo/p4PVHvfAyPUwdaqA==","length":15232,"stub":true},"cli-0.1.7.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-d7BMGGQuFTvK/zipRE0dIA==","length":12708,"stub":true},"cli-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-0ZlHCJ+h0FyAH2mj+fJngg==","length":12431,"stub":true},"cli-0.1.5.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-Ao/1yMxW3dflD/bti04Tdg==","length":12489,"stub":true},"cli-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-EarWBzNb6oY9zGMfA65sJw==","length":12416,"stub":true},"cli-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-wLlNvuKVDYPJUfiMqEKthA==","length":12226,"stub":true},"cli-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-To6IMm37j4VNpWfnXuA4qQ==","length":6980,"stub":true},"cli-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-gxTdS52rt9+gxyW83cdEvg==","length":5112,"stub":true}},"_etag":"\"AMQ0IB38L4U2374SVORQIZROG\""}