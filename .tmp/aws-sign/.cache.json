{"_id":"aws-sign","_rev":"14-e0fa29ea4a8cfaacd36d6b11708bee79","name":"aws-sign","description":"AWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.","dist-tags":{"latest":"0.1.1"},"versions":{"0.0.1":{"name":"aws-sign","description":"Calculates Authorization header for Amazon AWS REST requests","version":"0.0.1","author":{"name":"Egor Egorov","email":"me@egorfine.com"},"homepage":"https://github.com/egorFiNE/node-aws-sign","repository":{"type":"git","url":"git://github.com/egorFiNE/node-aws-sign.git"},"devDependencies":{"nodeunit":">= 0.6.0"},"_npmUser":{"name":"egorfine","email":"me@egorfine.com"},"_id":"aws-sign@0.0.1","dependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"bdbef9355666df0cc6684e100c57b44d8e231b5e","tarball":"http://registry.npmjs.org/aws-sign/-/aws-sign-0.0.1.tgz"},"maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"directories":{}},"0.0.2":{"name":"aws-sign","description":"Calculates Authorization header for Amazon AWS REST requests","version":"0.0.2","author":{"name":"Egor Egorov","email":"me@egorfine.com"},"homepage":"https://github.com/egorFiNE/node-aws-sign","repository":{"type":"git","url":"git://github.com/egorFiNE/node-aws-sign.git"},"devDependencies":{"nodeunit":">= 0.6.0"},"_npmUser":{"name":"egorfine","email":"me@egorfine.com"},"_id":"aws-sign@0.0.2","dependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"2c37c720a92e5ca1befcecce4dd63847e9acfa90","tarball":"http://registry.npmjs.org/aws-sign/-/aws-sign-0.0.2.tgz"},"maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"directories":{}},"0.1.0":{"name":"aws-sign","description":"Calculates Authorization header for Amazon AWS REST requests","version":"0.1.0","author":{"name":"Egor Egorov","email":"me@egorfine.com"},"homepage":"https://github.com/egorFiNE/node-aws-sign","repository":{"type":"git","url":"https://github.com/egorFiNE/node-aws-sign.git"},"devDependencies":{"nodeunit":">= 0.6.0"},"readme":"# node-aws-sign\n\nSimple module to calculate `Authorization` header for Amazon AWS REST requests.\n\nSimple it is: \n\t\n```javascript\nvar AwsSign = require('aws-sign');\nvar signer = new AwsSign({ \n\taccessKeyId: 'AKIAIOSFODNN7EXAMPLE',\n\tsecretAccessKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'\n});\n\nvar opts = {\n\tmethod: 'PUT',\n\thost: 'johnsmith.s3.amazonaws.com',\n\tpath: '/photos/puppy.jpg',\n\theaders: { ... },\n\t... // Other request options, ignored by AwsSign.\n};\nsigner.sign(opts);\nhttps.request(opts, ...);\n```\n\nThe following keys are mandatory: \n\n* `method`\n* `host`\n* `path`\n\nOthers are optional. A date header (`headers.date`) will be added for you if it is not already set.\n\n## Non-goals\n\nNode.js has no legacy ;-) so there is no need to support some legacy features of Amazon API for older software. I.e. there is no support for path-style bucket access.\n\n`x-amz-date` substitution is not supported because Node's http module has no problems setting `Date` header.\n\nMultiple `x-amz-` keys are not supported. I.e. the following part of the example won't work: \n\n\tX-Amz-Meta-ReviewedBy: joe@johnsmith.net\n\tX-Amz-Meta-ReviewedBy: jane@johnsmith.net\n\nUse a single header instead: \n\n\tX-Amz-Meta-ReviewedBy: joe@johnsmith.net,jane@johnsmith.net\n\n## 0.0.x to 0.1.x migration guide\n\n0.1.x supports the same options as http.request (thanks to Ben Trask). \n\nBefore:\n\n```javascript\n\tauth = signer.sign({\n\t\tmethod: 'PUT', \n\t\tbucket: 'johnsmith', \n\t\tpath: '/photos/puppy.jpg', \n\t\tdate: 'Tue, 27 Mar 2007 21:15:45 +0000', \n\t\tcontentType: 'image/jpeg'\n\t});\n\thttp.request({\n\t\t…\n\t\theaders: {\n\t\t\t…,\n\t\t\tAuthorization: auth\n\t\t}\n\t});\n```\n\nAfter: \n\n```javascript\n\tvar opts = {\n\t\tmethod: 'PUT', \n\t\thost: 'johnsmith.s3.amazonaws.com',\n\t\tpath: '/photos/puppy.jpg', \n\t\theaders: {\n\t\t\tdate: 'Tue, 27 Mar 2007 21:15:45 +0000', \n\t\t\tcontentType: 'image/jpeg'\n\t\t}\n\t};\n\tsigner.sign(opts);\n\thttp.request(opts);\n```\n\n\n## Testing\n\n\tnodeunit test/\n\t\n## Installation\n\n\tnpm install aws-sign\n\n## Author\n\nEgor Egorov, me@egorfine.com.\n\n## License\n\nMIT.\n","_id":"aws-sign@0.1.0","dist":{"shasum":"19a301e459262c423e9582d9cefc3874a43a9878","tarball":"http://registry.npmjs.org/aws-sign/-/aws-sign-0.1.0.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"egorfine","email":"me@egorfine.com"},"maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"directories":{}},"0.1.1":{"name":"aws-sign","description":"Calculates Authorization header for Amazon AWS REST requests","version":"0.1.1","author":{"name":"Egor Egorov","email":"me@egorfine.com"},"homepage":"https://github.com/egorFiNE/node-aws-sign","repository":{"type":"git","url":"https://github.com/egorFiNE/node-aws-sign.git"},"devDependencies":{"nodeunit":">= 0.6.0"},"readme":"# node-aws-sign\n\nSimple module to calculate `Authorization` header for Amazon AWS REST requests.\n\nSimple it is: \n\t\n```javascript\nvar AwsSign = require('aws-sign');\nvar signer = new AwsSign({ \n\taccessKeyId: 'AKIAIOSFODNN7EXAMPLE',\n\tsecretAccessKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'\n});\n\nvar opts = {\n\tmethod: 'PUT',\n\thost: 'johnsmith.s3.amazonaws.com',\n\tpath: '/photos/puppy.jpg',\n\theaders: { ... },\n\t... // Other request options, ignored by AwsSign.\n};\nsigner.sign(opts);\nhttps.request(opts, ...);\n```\n\nThe following keys are mandatory: \n\n* `method`\n* `host`\n* `path`\n\nOthers are optional. A date header (`headers.date`) will be added for you if it is not already set.\n\n## Non-goals\n\nNode.js has no legacy ;-) so there is no need to support some legacy features of Amazon API for older software. I.e. there is no support for path-style bucket access.\n\n`x-amz-date` substitution is not supported because Node's http module has no problems setting `Date` header.\n\nMultiple `x-amz-` keys are not supported. I.e. the following part of the example won't work: \n\n\tX-Amz-Meta-ReviewedBy: joe@johnsmith.net\n\tX-Amz-Meta-ReviewedBy: jane@johnsmith.net\n\nUse a single header instead: \n\n\tX-Amz-Meta-ReviewedBy: joe@johnsmith.net,jane@johnsmith.net\n\n## 0.0.x to 0.1.x migration guide\n\n0.1.x supports the same options as http.request (thanks to Ben Trask). \n\nBefore:\n\n```javascript\n\tauth = signer.sign({\n\t\tmethod: 'PUT', \n\t\tbucket: 'johnsmith', \n\t\tpath: '/photos/puppy.jpg', \n\t\tdate: 'Tue, 27 Mar 2007 21:15:45 +0000', \n\t\tcontentType: 'image/jpeg'\n\t});\n\thttp.request({\n\t\t…\n\t\theaders: {\n\t\t\t…,\n\t\t\tAuthorization: auth\n\t\t}\n\t});\n```\n\nAfter: \n\n```javascript\n\tvar opts = {\n\t\tmethod: 'PUT', \n\t\thost: 'johnsmith.s3.amazonaws.com',\n\t\tpath: '/photos/puppy.jpg', \n\t\theaders: {\n\t\t\tdate: 'Tue, 27 Mar 2007 21:15:45 +0000', \n\t\t\tcontentType: 'image/jpeg'\n\t\t}\n\t};\n\tsigner.sign(opts);\n\thttp.request(opts);\n```\n\n\n## Testing\n\n\tnodeunit test/\n\t\n## Installation\n\n\tnpm install aws-sign\n\n## Author\n\nEgor Egorov, me@egorfine.com.\n\n## License\n\nMIT.\n","_id":"aws-sign@0.1.1","dist":{"shasum":"68cb7cb5f5278fb8ac5f6ecbacf9efc3db6503f1","tarball":"http://registry.npmjs.org/aws-sign/-/aws-sign-0.1.1.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"egorfine","email":"me@egorfine.com"},"maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"directories":{}},"0.2.0":{"author":{"name":"Mikeal Rogers","email":"mikeal.rogers@gmail.com","url":"http://www.futurealoof.com"},"name":"aws-sign","description":"AWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.","version":"0.2.0","repository":{"url":"https://github.com/mikeal/aws-sign"},"main":"index.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"mikeal","email":"mikeal.rogers@gmail.com"},"_id":"aws-sign@0.2.0","_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.1","_defaultsLoaded":true,"dist":{"shasum":"c55013856c8194ec854a0cbec90aab5a04ce3ac5","tarball":"http://registry.npmjs.org/aws-sign/-/aws-sign-0.2.0.tgz"},"maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"directories":{}},"0.3.0":{"author":{"name":"Mikeal Rogers","email":"mikeal.rogers@gmail.com","url":"http://www.futurealoof.com"},"name":"aws-sign","description":"AWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.","version":"0.3.0","repository":{"url":"https://github.com/mikeal/aws-sign"},"main":"index.js","dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"readme":"aws-sign\n========\n\nAWS signing. Originally pulled from LearnBoost/knox, maintained as vendor in request, now a standalone module.\n","readmeFilename":"README.md","_id":"aws-sign@0.3.0","dist":{"shasum":"3d81ca69b474b1e16518728b51c24ff0bbedc6e9","tarball":"http://registry.npmjs.org/aws-sign/-/aws-sign-0.3.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"mikeal","email":"mikeal.rogers@gmail.com"},"maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"directories":{}}},"readme":"# node-aws-sign\n\nSimple module to calculate `Authorization` header for Amazon AWS REST requests.\n\nSimple it is: \n\t\n```javascript\nvar AwsSign = require('aws-sign');\nvar signer = new AwsSign({ \n\taccessKeyId: 'AKIAIOSFODNN7EXAMPLE',\n\tsecretAccessKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'\n});\n\nvar authorization = signer.sign({\n\tmethod: 'PUT', \n\tbucket: 'johnsmith', \n\tpath: '/photos/puppy.jpg',  \n\tdate: 'Tue, 27 Mar 2007 19:36:42 +0000', \n\tcontentType: 'image/puppy',\n\tcontentMd5: null, \n\txAmzHeaders: {}\n});\n```\n\t\nThe following keys are mandatory: \n\n* `method`\n* `bucket`\n* `path`\n\nOthers are optional. `Date` is set to current date if not specified.\n\n## Non-goals\n\nNode.js has no legacy ;-) so there is no need to support some legacy features of Amazon API for older software. I.e. there is no support for path-style bucket access.\n\n`x-amz-date` substitution is not supported because Node's http module has no problems setting `Date` header.\n\nMultiple `x-amz-` keys are not supported. I.e. the following part of the example won't work: \n\n\tX-Amz-Meta-ReviewedBy: joe@johnsmith.net\n\tX-Amz-Meta-ReviewedBy: jane@johnsmith.net\n\nUse a single header instead: \n\n\tX-Amz-Meta-ReviewedBy: joe@johnsmith.net,jane@johnsmith.net\n\n## Testing\n\n\tnodeunit test/\n\t\n## Installation\n\n\tnpm install aws-sign\n\n## Author\n\nEgor Egorov, me@egorfine.com.\n\n## License\n\nMIT, of course. \n","maintainers":[{"name":"egorfine","email":"me@egorfine.com"}],"time":{"0.0.1":"2012-06-10T11:16:40.304Z","0.0.2":"2012-06-10T12:20:47.017Z","0.1.0":"2012-10-08T13:35:05.010Z","0.1.1":"2012-10-24T19:36:44.187Z","0.2.0":"2013-03-01T20:08:08.896Z","0.3.0":"2013-04-22T05:13:43.202Z"},"author":{"name":"Mikeal Rogers","email":"mikeal.rogers@gmail.com","url":"http://www.futurealoof.com"},"repository":{"url":"https://github.com/mikeal/aws-sign"},"_attachments":{"aws-sign-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":12,"digest":"md5-PYa2lf6IgopTiP9x3wfOdg==","length":5031,"stub":true},"aws-sign-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-/uvjBofB0YmGMs8D6jnOLg==","length":1675,"stub":true},"aws-sign-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-abGkG84mjOfQr1BkbVJz/Q==","length":3537,"stub":true},"aws-sign-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-QP2kWPFc7Fblt3bHpfxYiA==","length":3515,"stub":true},"aws-sign-0.0.2.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-KvxfukA6qXud+HxryHVYUQ==","length":3079,"stub":true},"aws-sign-0.0.1.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-UyQ/m9JmWqUssqhbb65J8g==","length":3054,"stub":true}},"_etag":"\"BF23F8BCHIS1VYPU7LWLU2F9B\""}