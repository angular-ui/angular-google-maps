{"_id":"connect-livereload","_rev":"23-482e116447be497e721d20c2b348e30b","name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","dist-tags":{"latest":"0.3.2"},"versions":{"0.0.2":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.0.2","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\nUsage\n=====\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n\tvar port = 35729;\n  app.use(require('connect-livereload')(port));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\nAlternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\nCredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\n\nLicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)","_id":"connect-livereload@0.0.2","dist":{"shasum":"db7094ac5c18a8b738a6d274d33f1a80ee71807e","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.0.2.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.0.3":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.0.3","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var port = 35729;\n  app.use(require('connect-livereload')(port));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.0.3","dist":{"shasum":"131d1ff2c30276358456a527a5b9ba75ce209f20","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.0.3.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.1.0":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.1.0","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var port = 35729;\n  app.use(require('connect-livereload')(port));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.1.0","dist":{"shasum":"750fd1db3dfc8a0c61037ae921977d6e3b7584b4","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.1.0.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.1.1":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.1.1","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var liveReloadPort = 35729;\n  var excludeList = ['.woff', '.flv'];\n  \n  app.use(require('connect-livereload')({\n    port: liveReloadPort,\n    excludeList: excludeList\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.1.1","dist":{"shasum":"47f8752181bcc250934cbbb6402553bbf5fb4ea3","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.1.1.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.1.2":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.1.2","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var liveReloadPort = 35729;\n  var excludeList = ['.woff', '.flv'];\n  \n  app.use(require('connect-livereload')({\n    port: liveReloadPort,\n    excludeList: excludeList\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.1.2","dist":{"shasum":"c67b31cdae1c982aadef06f0dff7ab4cc8c36372","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.1.2.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.1.3":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.1.3","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{"express":"~3.2.2","supertest":"~0.6.0","mocha":"~1.9.0"},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var liveReloadPort = 35729;\n  var excludeList = ['.woff', '.flv'];\n  \n  app.use(require('connect-livereload')({\n    port: liveReloadPort,\n    excludeList: excludeList\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\t\n###note \nif you add this middleware before the static middleware, it will lead to problems. \nIf you can't avoid that for some reason, you have to add all of the static file extensions to the `excludeList: ['.css', '.js', '.ico', '.png', 'ect...']`\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with \n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.1.3","dist":{"shasum":"10c231440170a448c2133ddaf3f07e1e7a55a7a0","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.1.3.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.1.4":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.1.4","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{"express":"~3.2.2","supertest":"~0.6.0","mocha":"~1.9.0"},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var liveReloadPort = 35729;\n  var excludeList = ['.woff', '.flv'];\n  \n  app.use(require('connect-livereload')({\n    port: liveReloadPort,\n    excludeList: excludeList\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\t\n###note \nif you add this middleware before the static middleware, it will lead to problems. \nIf you can't avoid that for some reason, you have to add all of the static file extensions to the `excludeList: ['.css', '.js', '.ico', '.png', 'ect...']`\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with \n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.1.4","dist":{"shasum":"ef697fbb832c6466697385a5e18ec32927e9fdee","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.1.4.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.2.0":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.2.0","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{"express":"~3.2.2","supertest":"~0.6.0","mocha":"~1.9.0"},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n  var liveReloadPort = 35729;\n  var excludeList = ['.woff', '.flv'];\n  \n  app.use(require('connect-livereload')({\n    port: liveReloadPort,\n    excludeList: excludeList\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\t\n###note \nif you add this middleware before the static middleware, it will lead to problems. \nIf you can't avoid that for some reason, you have to add all of the static file extensions to the `excludeList: ['.css', '.js', '.ico', '.png', 'ect...']`\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with \n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","_id":"connect-livereload@0.2.0","dist":{"shasum":"7573cf587846dffd02a3e65e3122b470dd615ec9","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.2.0.tgz"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.3.0":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.3.0","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{"express":"~3.2.2","supertest":"~0.6.0","mocha":"~1.9.0"},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n[![NPM version](https://badge.fury.io/js/connect-livereload.png)](http://badge.fury.io/js/connect-livereload)\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nnote: if you use this middleware, you should make sure to switch off the Browser LiveReload Extension if you have it installed.\n\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload) or [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch).\n\n`connect-livereload` itself does not serve the `livereload.js` script.\n\nIn your connect or express application add this after the static and before the dynamic routes.\nIf you need liveReload on static html files, then place it before the static routes.\n`ignore` gives you the possibility to ignore certain files or url's from being handled by `connect-livereload`.\n\n## connect/express example\n```javascript\n  app.use(require('connect-livereload')({\n    port: 35729\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n## options\nOptions are not mandatory: `app.use(require('connect-livereload')());`\nThe Options have to be provided when the middleware is loaded:\n\ne.g.:\n```\n  app.use(require('connect-livereload')({\n    port: 35729,\n    ignore: ['.js', '.svg']\n  }));\n\n```\n\nThese are the available options with the following defaults:\n\n```javascript\n  // these files will be ignored\n  ignore: ['.js', '.css', '.svg', '.ico', '.woff', '.png', '.jpg', '.jpeg'],\n  \n  // this function is used to determine if the content of `res.write` or `res.end` is html.\n  html: function (str) {\n    return /<[:_-\\w\\s\\!\\/\\=\\\"\\']+>/i.test(str);\n  },\n  \n  // rules are provided to find the place where the snippet should be inserted.\n  // the main problem is that on the server side it can be tricky to determine if a string will be valid html on the client.\n  // the function `fn` of the first `match` is executed like this `body.replace(rule.match, rule.fn);`\n  // the function `fn` has got the arguments `fn(w, s)` where `w` is the matches string and `s` is the snippet.\n  rules: [{\n    match: /<\\/body>/,\n    fn: prepend\n  }, {\n    match: /<\\/html>/,\n    fn: prepend\n  }, {\n    match: /<\\!DOCTYPE.+>/,\n    fn: append\n  }],\n\n  // port where the script is loaded\n  port: 35729,\n\n  // location where the script is provided (not by connect-livereload). Change this e.g. when serving livereload with a proxy.\n  src: \"http://localhost:35729/livereload.js?snipver=1\", \n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\n## grunt example\n\nThe following example is from an actual Gruntfile that uses [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect)\n\n```javascript\nconnect: {\n  options: {\n    port: 3000,\n    hostname: 'localhost'\n  },\n  dev: {\n    options: {\n      middleware: function (connect) {\n        return [\n          require('connect-livereload')(), // <--- here\n          checkForDownload,\n          mountFolder(connect, '.tmp'),\n          mountFolder(connect, 'app')\n        ];\n      }\n    }\n  }\n}\n```\nFor use as middleware in grunt simply add the following to the **top** of your array of middleware.\n\n```javascript\n  require('connect-livereload')(),\n```\nYou can pass in options to this call if you do not want the defaults.\n\n`dev` is simply the name of the server being used with the task `grunt connect:dev`. The other items in the `middleware` array are all functions that either are of the form `function (req, res, next)` like `checkForDownload` or return that like `mountFolder(connect, 'something')`.\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with\n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/intesso/connect-livereload/issues"},"_id":"connect-livereload@0.3.0","dist":{"shasum":"938334f2211f1f971bbf9f901f31ff9a1d6a3c7a","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"andineck","email":"andi.neck@intesso.com"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.3.1":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.3.1","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{"express":"~3.2.2","supertest":"~0.6.0","mocha":"~1.9.0"},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n[![NPM version](https://badge.fury.io/js/connect-livereload.png)](http://badge.fury.io/js/connect-livereload)\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nnote: if you use this middleware, you should make sure to switch off the Browser LiveReload Extension if you have it installed.\n\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload) or [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch).\n\n`connect-livereload` itself does not serve the `livereload.js` script.\n\nIn your connect or express application add this after the static and before the dynamic routes.\nIf you need liveReload on static html files, then place it before the static routes.\n`ignore` gives you the possibility to ignore certain files or url's from being handled by `connect-livereload`.\n\n## connect/express example\n```javascript\n  app.use(require('connect-livereload')({\n    port: 35729\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n## options\nOptions are not mandatory: `app.use(require('connect-livereload')());`\nThe Options have to be provided when the middleware is loaded:\n\ne.g.:\n```\n  app.use(require('connect-livereload')({\n    port: 35729,\n    ignore: ['.js', '.svg']\n  }));\n\n```\n\nThese are the available options with the following defaults:\n\n```javascript\n  // these files will be ignored\n  ignore: ['.js', '.css', '.svg', '.ico', '.woff', '.png', '.jpg', '.jpeg'],\n  \n  // this function is used to determine if the content of `res.write` or `res.end` is html.\n  html: function (str) {\n    return /<[:_-\\w\\s\\!\\/\\=\\\"\\']+>/i.test(str);\n  },\n  \n  // rules are provided to find the place where the snippet should be inserted.\n  // the main problem is that on the server side it can be tricky to determine if a string will be valid html on the client.\n  // the function `fn` of the first `match` is executed like this `body.replace(rule.match, rule.fn);`\n  // the function `fn` has got the arguments `fn(w, s)` where `w` is the matches string and `s` is the snippet.\n  rules: [{\n    match: /<\\/body>/,\n    fn: prepend\n  }, {\n    match: /<\\/html>/,\n    fn: prepend\n  }, {\n    match: /<\\!DOCTYPE.+>/,\n    fn: append\n  }],\n\n  // port where the script is loaded\n  port: 35729,\n\n  // location where the script is provided (not by connect-livereload). Change this e.g. when serving livereload with a proxy.\n  src: \"http://localhost:35729/livereload.js?snipver=1\", \n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\n## grunt example\n\nThe following example is from an actual Gruntfile that uses [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect)\n\n```javascript\nconnect: {\n  options: {\n    port: 3000,\n    hostname: 'localhost'\n  },\n  dev: {\n    options: {\n      middleware: function (connect) {\n        return [\n          require('connect-livereload')(), // <--- here\n          checkForDownload,\n          mountFolder(connect, '.tmp'),\n          mountFolder(connect, 'app')\n        ];\n      }\n    }\n  }\n}\n```\nFor use as middleware in grunt simply add the following to the **top** of your array of middleware.\n\n```javascript\n  require('connect-livereload')(),\n```\nYou can pass in options to this call if you do not want the defaults.\n\n`dev` is simply the name of the server being used with the task `grunt connect:dev`. The other items in the `middleware` array are all functions that either are of the form `function (req, res, next)` like `checkForDownload` or return that like `mountFolder(connect, 'something')`.\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with\n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/intesso/connect-livereload/issues"},"homepage":"https://github.com/intesso/connect-livereload","_id":"connect-livereload@0.3.1","dist":{"shasum":"e4622f8742eae86e0aa998785df888cd7ed443f0","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.3.1.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"andineck","email":"andi.neck@intesso.com"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}},"0.3.2":{"name":"connect-livereload","description":"connect middleware for adding the livereload script to the response","version":"0.3.2","author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"contributors":[{"name":"Andi Neck","email":"andi.neck@intesso.com"}],"dependencies":{},"devDependencies":{"express":"~3.2.2","supertest":"~0.6.0","mocha":"~1.9.0"},"keywords":["connect","livereload","live-reload"],"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"main":"index","engines":{"node":"*"},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n[![NPM version](https://badge.fury.io/js/connect-livereload.png)](http://badge.fury.io/js/connect-livereload)\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nnote: if you use this middleware, you should make sure to switch off the Browser LiveReload Extension if you have it installed.\n\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload) or [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch).\n\n`connect-livereload` itself does not serve the `livereload.js` script.\n\nIn your connect or express application add this after the static and before the dynamic routes.\nIf you need liveReload on static html files, then place it before the static routes.\n`ignore` gives you the possibility to ignore certain files or url's from being handled by `connect-livereload`.\n\n## connect/express example\n```javascript\n  app.use(require('connect-livereload')({\n    port: 35729\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n## options\nOptions are not mandatory: `app.use(require('connect-livereload')());`\nThe Options have to be provided when the middleware is loaded:\n\ne.g.:\n```\n  app.use(require('connect-livereload')({\n    port: 35729,\n    ignore: ['.js', '.svg']\n  }));\n\n```\n\nThese are the available options with the following defaults:\n\n```javascript\n  // these files will be ignored\n  ignore: ['.js', '.css', '.svg', '.ico', '.woff', '.png', '.jpg', '.jpeg'],\n  \n  // this function is used to determine if the content of `res.write` or `res.end` is html.\n  html: function (str) {\n    return /<[:_-\\w\\s\\!\\/\\=\\\"\\']+>/i.test(str);\n  },\n  \n  // rules are provided to find the place where the snippet should be inserted.\n  // the main problem is that on the server side it can be tricky to determine if a string will be valid html on the client.\n  // the function `fn` of the first `match` is executed like this `body.replace(rule.match, rule.fn);`\n  // the function `fn` has got the arguments `fn(w, s)` where `w` is the matches string and `s` is the snippet.\n  rules: [{\n    match: /<\\/body>/,\n    fn: prepend\n  }, {\n    match: /<\\/html>/,\n    fn: prepend\n  }, {\n    match: /<\\!DOCTYPE.+>/,\n    fn: append\n  }],\n\n  // port where the script is loaded\n  port: 35729,\n\n  // location where the script is provided (not by connect-livereload). Change this e.g. when serving livereload with a proxy.\n  src: \"http://localhost:35729/livereload.js?snipver=1\", \n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\n## grunt example\n\nThe following example is from an actual Gruntfile that uses [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect)\n\n```javascript\nconnect: {\n  options: {\n    port: 3000,\n    hostname: 'localhost'\n  },\n  dev: {\n    options: {\n      middleware: function (connect) {\n        return [\n          require('connect-livereload')(), // <--- here\n          checkForDownload,\n          mountFolder(connect, '.tmp'),\n          mountFolder(connect, 'app')\n        ];\n      }\n    }\n  }\n}\n```\nFor use as middleware in grunt simply add the following to the **top** of your array of middleware.\n\n```javascript\n  require('connect-livereload')(),\n```\nYou can pass in options to this call if you do not want the defaults.\n\n`dev` is simply the name of the server being used with the task `grunt connect:dev`. The other items in the `middleware` array are all functions that either are of the form `function (req, res, next)` like `checkForDownload` or return that like `mountFolder(connect, 'something')`.\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The initial middleware code was mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with\n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/intesso/connect-livereload/issues"},"homepage":"https://github.com/intesso/connect-livereload","_id":"connect-livereload@0.3.2","dist":{"shasum":"ddb70aa50901d583783662770e3d3b63d7ce40ff","tarball":"http://registry.npmjs.org/connect-livereload/-/connect-livereload-0.3.2.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"andineck","email":"andi.neck@intesso.com"},"maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"directories":{}}},"readme":"connect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\nUsage\n=====\nthis middleware can be used with a LiveReload server e.g. [grunt-reload](https://github.com/webxl/grunt-reload).\n\nIn your connect or express application add this after the static and before the dynamic routes:\n```javascript\n\tvar port = 35729;\n  app.use(require('connect-livereload')(port));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\nAlternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\nCredits\n=======\n* The middleware code is mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\n\nLicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)","maintainers":[{"name":"andineck","email":"andi.neck@intesso.com"}],"time":{"0.0.2":"2013-04-16T07:33:44.589Z","0.0.3":"2013-04-19T08:47:35.171Z","0.1.0":"2013-04-23T09:27:33.380Z","0.1.1":"2013-05-01T09:33:06.882Z","0.1.2":"2013-05-04T18:21:45.604Z","0.1.3":"2013-05-05T20:16:43.201Z","0.1.4":"2013-05-18T18:42:15.324Z","0.2.0":"2013-06-04T13:01:26.578Z","0.3.0":"2013-09-12T15:50:40.112Z","0.3.1":"2013-12-11T08:18:38.587Z","0.3.2":"2014-01-04T16:06:19.053Z"},"author":{"name":"Andi Neck","email":"andi.neck@intesso.com"},"repository":{"type":"git","url":"git://github.com/intesso/connect-livereload"},"_attachments":{"connect-livereload-0.3.2.tgz":{"content_type":"application/octet-stream","revpos":22,"digest":"md5-JdOX51HVK58F22gieTRiAw==","length":4190,"stub":true},"connect-livereload-0.3.1.tgz":{"content_type":"application/octet-stream","revpos":20,"digest":"md5-wJ/XJkFWZVJC2chumPLlQg==","length":4156,"stub":true},"connect-livereload-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-XrVohzyMWYoAxIDOOMN+bA==","length":4057,"stub":true},"connect-livereload-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-m6wVGcI98z4MbosPa/vEYg==","length":2911,"stub":true},"connect-livereload-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-YzOF1n6jEfjewB4GD8yzLw==","length":2917,"stub":true},"connect-livereload-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-j0p09+U5XAEZKVRbx4usiw==","length":2907,"stub":true},"connect-livereload-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-/DZq3T27IejY6lf7vQ3z2g==","length":2542,"stub":true},"connect-livereload-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-yOSoUUh446+V2hmX+pVCkg==","length":2576,"stub":true},"connect-livereload-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-ZL1YhmeH1XsqBiYBXxJqyA==","length":2397,"stub":true},"connect-livereload-0.0.3.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-MlsLxo9mxVXQ9JO/idpV7A==","length":2442,"stub":true},"connect-livereload-0.0.2.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-7YAPk4NGAWKpjeSCSoQqwg==","length":2373,"stub":true}},"_etag":"\"8R6A9N0WAI7DSSS2BBI8BS1F5\""}