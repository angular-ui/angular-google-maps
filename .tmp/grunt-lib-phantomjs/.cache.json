{"_id":"grunt-lib-phantomjs","_rev":"20-051f42b0f97b497bc1624d9cd17a15f5","name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","dist-tags":{"latest":"0.5.0"},"versions":{"0.1.0":{"name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","version":"0.1.0","homepage":"http://github.com/gruntjs/grunt-lib-phantomjs","author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"bugs":{"url":"https://github.com/gruntjs/grunt-lib-phantomjs/issues"},"licenses":[{"type":"MIT","url":"http://github.com/gruntjs/grunt-lib-phantomjs/blob/master/LICENSE-MIT"}],"engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"eventemitter2":"~0.4.9","semver":"~1.0.14","temporary":"~0.0.4","phantomjs":"~0.2.6"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt":"~0.4.0"},"main":"lib/phantomjs","readme":"# grunt-lib-phantomjs (unreleased, for grunt v0.4.0a)\n\n> Grunt and PhantomJS, sitting in a tree.\n","readmeFilename":"README.md","_id":"grunt-lib-phantomjs@0.1.0","dist":{"shasum":"c486aa455bec5ee617ffad3deab9226afcaff237","tarball":"http://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-0.1.0.tgz"},"_npmVersion":"1.1.70","_npmUser":{"name":"cowboy","email":"cowboy@rj3.net"},"maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"}],"directories":{}},"0.2.0":{"name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","version":"0.2.0","homepage":"http://github.com/gruntjs/grunt-lib-phantomjs","author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"bugs":{"url":"https://github.com/gruntjs/grunt-lib-phantomjs/issues"},"licenses":[{"type":"MIT","url":"http://github.com/gruntjs/grunt-lib-phantomjs/blob/master/LICENSE-MIT"}],"engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"eventemitter2":"~0.4.9","semver":"~1.0.14","temporary":"~0.0.4","phantomjs":"~1.8.1"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt":"~0.4.0"},"main":"lib/phantomjs","readme":"# grunt-lib-phantomjs\n\n> Grunt and PhantomJS, sitting in a tree.\n\n## Usage\n\nThe best way to understand how this lib should be used is by looking at the [grunt-contrib-qunit](https://github.com/gruntjs/grunt-contrib-qunit) plugin. Mainly, look at how [the lib is required](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L17), how [event handlers are bound](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L51-L128) and how [PhantomJS is actually spawned](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L160-L173).\n\nAlso, in the case of the grunt-contrib-qunit plugin, it's important to know that the page being loaded into PhantomJS *doesn't* know it will be loaded into PhantomJS, and as such doesn't have any PhantomJS->Grunt code in it. That communication code, aka. the [\"bridge\"](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/phantomjs/bridge.js), is dynamically [injected into the html page](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L136).\n\n## An inline example\n\nIf a Grunt task looked something like this:\n\n```js\ngrunt.registerTask('mytask', 'Integrate with phantomjs.', function() {\n  var phantomjs = require('./lib/phantomjs').init(grunt);\n  var errorCount = 0;\n\n  // Handle any number of namespaced events like so.\n  phantomjs.on('mytask.ok', function(msg) {\n    grunt.log.writeln(msg);\n  });\n\n  phantomjs.on('mytask.error', function(msg) {\n    errorCount++;\n    grunt.log.error(msg);\n  });\n\n  // Create some kind of \"all done\" event.\n  phantomjs.on('mytask.done', function() {\n    phantomjs.halt();\n  });\n\n  // This task is async.\n  var done = this.async();\n\n  // Spawn phantomjs\n  phantomjs.spawn('test.html', {\n    // Additional PhantomJS options.\n    options: {},\n    // Complete the task when done.\n    done: function(err) {\n      done(err || errorCount === 0);\n    }\n  });\n\n});\n```\n\nAnd `test.html` looked something like this (note the \"bridge\" is hard-coded into this page and not injected):\n\n```html\n<!doctype html>\n<html>\n<head>\n<script>\n\n// Send messages to the parent PhantomJS process via alert! Good times!!\nfunction sendMessage() {\n  var args = [].slice.call(arguments);\n  alert(JSON.stringify(args));\n}\n\nsendMessage('mytask.ok', 'Something worked.');\nsendMessage('mytask.error', 'Something failed.');\nsendMessage('mytask.done');\n\n</script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThen running Grunt would behave something like this:\n\n```shell\n$ grunt mytask\nRunning \"mytask\" task\nSomething worked.\n>> Something failed.\nWarning: Task \"mytask\" failed. Use --force to continue.\n\nAborted due to warnings.\n```\n\n## Release History\n\n* 2013-02-28 - v0.2.0 - Use PhantomJS 1.8.1.\n* 2012-12-21 - v0.1.0 - Use PhantomJS 1.7.0.\n","readmeFilename":"README.md","_id":"grunt-lib-phantomjs@0.2.0","dist":{"shasum":"9106d8a817757d53320b2ad95e6d7f98a34832ce","tarball":"http://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-0.2.0.tgz"},"_npmVersion":"1.1.70","_npmUser":{"name":"cowboy","email":"cowboy@rj3.net"},"maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"}],"directories":{}},"0.3.0":{"name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","version":"0.3.0","homepage":"http://github.com/gruntjs/grunt-lib-phantomjs","author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"bugs":{"url":"https://github.com/gruntjs/grunt-lib-phantomjs/issues"},"licenses":[{"type":"MIT","url":"http://github.com/gruntjs/grunt-lib-phantomjs/blob/master/LICENSE-MIT"}],"engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"eventemitter2":"~0.4.9","semver":"~1.0.14","temporary":"~0.0.4","phantomjs":"~1.9.0-1"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt":"~0.4.0","difflet":"~0.2.3"},"main":"lib/phantomjs","readme":"# grunt-lib-phantomjs\n\n> Grunt and PhantomJS, sitting in a tree.\n\n## Usage\n\nThe best way to understand how this lib should be used is by looking at the [grunt-contrib-qunit](https://github.com/gruntjs/grunt-contrib-qunit) plugin. Mainly, look at how [the lib is required](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L17), how [event handlers are bound](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L51-L128) and how [PhantomJS is actually spawned](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L160-L173).\n\nAlso, in the case of the grunt-contrib-qunit plugin, it's important to know that the page being loaded into PhantomJS *doesn't* know it will be loaded into PhantomJS, and as such doesn't have any PhantomJS->Grunt code in it. That communication code, aka. the [\"bridge\"](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/phantomjs/bridge.js), is dynamically [injected into the html page](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L136).\n\n## An inline example\n\nIf a Grunt task looked something like this:\n\n```js\ngrunt.registerTask('mytask', 'Integrate with phantomjs.', function() {\n  var phantomjs = require('grunt-lib-phantomjs').init(grunt);\n  var errorCount = 0;\n\n  // Handle any number of namespaced events like so.\n  phantomjs.on('mytask.ok', function(msg) {\n    grunt.log.writeln(msg);\n  });\n\n  phantomjs.on('mytask.error', function(msg) {\n    errorCount++;\n    grunt.log.error(msg);\n  });\n\n  // Create some kind of \"all done\" event.\n  phantomjs.on('mytask.done', function() {\n    phantomjs.halt();\n  });\n\n  // Built-in error handlers.\n  phantomjs.on('fail.load', function(url) {\n    phantomjs.halt();\n    grunt.warn('PhantomJS unable to load URL.');\n  });\n\n  phantomjs.on('fail.timeout', function() {\n    phantomjs.halt();\n    grunt.warn('PhantomJS timed out.');\n  });\n\n  // This task is async.\n  var done = this.async();\n\n  // Spawn phantomjs\n  phantomjs.spawn('test.html', {\n    // Additional PhantomJS options.\n    options: {},\n    // Complete the task when done.\n    done: function(err) {\n      done(err || errorCount === 0);\n    }\n  });\n\n});\n```\n\nAnd `test.html` looked something like this (note the \"bridge\" is hard-coded into this page and not injected):\n\n```html\n<!doctype html>\n<html>\n<head>\n<script>\n\n// Send messages to the parent PhantomJS process via alert! Good times!!\nfunction sendMessage() {\n  var args = [].slice.call(arguments);\n  alert(JSON.stringify(args));\n}\n\nsendMessage('mytask.ok', 'Something worked.');\nsendMessage('mytask.error', 'Something failed.');\nsendMessage('mytask.done');\n\n</script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThen running Grunt would behave something like this:\n\n```shell\n$ grunt mytask\nRunning \"mytask\" task\nSomething worked.\n>> Something failed.\nWarning: Task \"mytask\" failed. Use --force to continue.\n\nAborted due to warnings.\n```\n\n## Release History\n\n* 2013-02-28 - v0.3.0 - Use PhantomJS 1.9.0-1.\n* 2013-02-28 - v0.2.0 - Use PhantomJS 1.8.1.\n* 2012-12-21 - v0.1.0 - Use PhantomJS 1.7.0.\n","readmeFilename":"README.md","_id":"grunt-lib-phantomjs@0.3.0","dist":{"shasum":"948c6b63017f6ae02351c450a23070190d0306a8","tarball":"http://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-0.3.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"jsoverson","email":"jsoverson@gmail.com"},"maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"},{"name":"jsoverson","email":"jsoverson@gmail.com"},{"name":"tkellen","email":"tyler@sleekcode.net"}],"directories":{}},"0.3.1":{"name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","version":"0.3.1","homepage":"http://github.com/gruntjs/grunt-lib-phantomjs","author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"bugs":{"url":"https://github.com/gruntjs/grunt-lib-phantomjs/issues"},"licenses":[{"type":"MIT","url":"http://github.com/gruntjs/grunt-lib-phantomjs/blob/master/LICENSE-MIT"}],"engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"eventemitter2":"~0.4.9","semver":"~1.0.14","temporary":"~0.0.4","phantomjs":"~1.9.0-1"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt":"~0.4.0","difflet":"~0.2.3"},"main":"lib/phantomjs","readme":"# grunt-lib-phantomjs\n\n> Grunt and PhantomJS, sitting in a tree.\n\n## Usage\n\nThe best way to understand how this lib should be used is by looking at the [grunt-contrib-qunit](https://github.com/gruntjs/grunt-contrib-qunit) plugin. Mainly, look at how [the lib is required](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L17), how [event handlers are bound](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L51-L128) and how [PhantomJS is actually spawned](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L160-L173).\n\nAlso, in the case of the grunt-contrib-qunit plugin, it's important to know that the page being loaded into PhantomJS *doesn't* know it will be loaded into PhantomJS, and as such doesn't have any PhantomJS->Grunt code in it. That communication code, aka. the [\"bridge\"](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/phantomjs/bridge.js), is dynamically [injected into the html page](https://github.com/gruntjs/grunt-contrib-qunit/blob/master/tasks/qunit.js#L136).\n\n## An inline example\n\nIf a Grunt task looked something like this:\n\n```js\ngrunt.registerTask('mytask', 'Integrate with phantomjs.', function() {\n  var phantomjs = require('grunt-lib-phantomjs').init(grunt);\n  var errorCount = 0;\n\n  // Handle any number of namespaced events like so.\n  phantomjs.on('mytask.ok', function(msg) {\n    grunt.log.writeln(msg);\n  });\n\n  phantomjs.on('mytask.error', function(msg) {\n    errorCount++;\n    grunt.log.error(msg);\n  });\n\n  // Create some kind of \"all done\" event.\n  phantomjs.on('mytask.done', function() {\n    phantomjs.halt();\n  });\n\n  // Built-in error handlers.\n  phantomjs.on('fail.load', function(url) {\n    phantomjs.halt();\n    grunt.warn('PhantomJS unable to load URL.');\n  });\n\n  phantomjs.on('fail.timeout', function() {\n    phantomjs.halt();\n    grunt.warn('PhantomJS timed out.');\n  });\n\n  // This task is async.\n  var done = this.async();\n\n  // Spawn phantomjs\n  phantomjs.spawn('test.html', {\n    // Additional PhantomJS options.\n    options: {},\n    // Complete the task when done.\n    done: function(err) {\n      done(err || errorCount === 0);\n    }\n  });\n\n});\n```\n\nAnd `test.html` looked something like this (note the \"bridge\" is hard-coded into this page and not injected):\n\n```html\n<!doctype html>\n<html>\n<head>\n<script>\n\n// Send messages to the parent PhantomJS process via alert! Good times!!\nfunction sendMessage() {\n  var args = [].slice.call(arguments);\n  alert(JSON.stringify(args));\n}\n\nsendMessage('mytask.ok', 'Something worked.');\nsendMessage('mytask.error', 'Something failed.');\nsendMessage('mytask.done');\n\n</script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThen running Grunt would behave something like this:\n\n```shell\n$ grunt mytask\nRunning \"mytask\" task\nSomething worked.\n>> Something failed.\nWarning: Task \"mytask\" failed. Use --force to continue.\n\nAborted due to warnings.\n```\n\n## Release History\n\n* 2013-02-28 - v0.3.0 - Use PhantomJS 1.9.0-1.\n* 2013-02-28 - v0.2.0 - Use PhantomJS 1.8.1.\n* 2012-12-21 - v0.1.0 - Use PhantomJS 1.7.0.\n","readmeFilename":"README.md","_id":"grunt-lib-phantomjs@0.3.1","dist":{"shasum":"4215feabb81b8d393005b0e784501f20aee70532","tarball":"http://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-0.3.1.tgz"},"_npmVersion":"1.1.70","_npmUser":{"name":"cowboy","email":"cowboy@rj3.net"},"maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"},{"name":"jsoverson","email":"jsoverson@gmail.com"},{"name":"tkellen","email":"tyler@sleekcode.net"}],"directories":{}},"0.4.0":{"name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","version":"0.4.0","homepage":"http://github.com/gruntjs/grunt-lib-phantomjs","author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"bugs":{"url":"https://github.com/gruntjs/grunt-lib-phantomjs/issues"},"licenses":[{"type":"MIT","url":"http://github.com/gruntjs/grunt-lib-phantomjs/blob/master/LICENSE-MIT"}],"engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"eventemitter2":"~0.4.9","semver":"~1.0.14","temporary":"~0.0.4","phantomjs":"~1.9.0-1"},"devDependencies":{"grunt-contrib-jshint":"~0.6.2","grunt":"~0.4.0","difflet":"~0.2.3"},"main":"lib/phantomjs","files":["lib","phantomjs"],"readme":"# grunt-lib-phantomjs\n\n> Grunt and PhantomJS, sitting in a tree.\n\n## Usage\n\nThe best way to understand how this lib should be used is by looking at the [grunt-contrib-qunit](https://github.com/gruntjs/grunt-contrib-qunit) plugin. Mainly, look at how [the lib is required](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L17), how [event handlers are bound](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L61-L144) and how [PhantomJS is actually spawned](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L177-L190).\n\nAlso, in the case of the grunt-contrib-qunit plugin, it's important to know that the page being loaded into PhantomJS *doesn't* know it will be loaded into PhantomJS, and as such doesn't have any PhantomJS->Grunt code in it. That communication code, aka. the [\"bridge\"](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/phantomjs/bridge.js), is dynamically [injected into the html page](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L152).\n\n## An inline example\n\nIf a Grunt task looked something like this:\n\n```js\ngrunt.registerTask('mytask', 'Integrate with phantomjs.', function() {\n  var phantomjs = require('grunt-lib-phantomjs').init(grunt);\n  var errorCount = 0;\n\n  // Handle any number of namespaced events like so.\n  phantomjs.on('mytask.ok', function(msg) {\n    grunt.log.writeln(msg);\n  });\n\n  phantomjs.on('mytask.error', function(msg) {\n    errorCount++;\n    grunt.log.error(msg);\n  });\n\n  // Create some kind of \"all done\" event.\n  phantomjs.on('mytask.done', function() {\n    phantomjs.halt();\n  });\n\n  // Built-in error handlers.\n  phantomjs.on('fail.load', function(url) {\n    phantomjs.halt();\n    grunt.warn('PhantomJS unable to load URL.');\n  });\n\n  phantomjs.on('fail.timeout', function() {\n    phantomjs.halt();\n    grunt.warn('PhantomJS timed out.');\n  });\n\n  // This task is async.\n  var done = this.async();\n\n  // Spawn phantomjs\n  phantomjs.spawn('test.html', {\n    // Additional PhantomJS options.\n    options: {},\n    // Complete the task when done.\n    done: function(err) {\n      done(err || errorCount === 0);\n    }\n  });\n\n});\n```\n\nAnd `test.html` looked something like this (note the \"bridge\" is hard-coded into this page and not injected):\n\n```html\n<!doctype html>\n<html>\n<head>\n<script>\n\n// Send messages to the parent PhantomJS process via alert! Good times!!\nfunction sendMessage() {\n  var args = [].slice.call(arguments);\n  alert(JSON.stringify(args));\n}\n\nsendMessage('mytask.ok', 'Something worked.');\nsendMessage('mytask.error', 'Something failed.');\nsendMessage('mytask.done');\n\n</script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThen running Grunt would behave something like this:\n\n```shell\n$ grunt mytask\nRunning \"mytask\" task\nSomething worked.\n>> Something failed.\nWarning: Task \"mytask\" failed. Use --force to continue.\n\nAborted due to warnings.\n```\n\n## OS Dependencies\nPhantomJS requires these dependencies\n**On Ubuntu/Debian**\n  apt-get install libfontconfig1 fontconfig libfontconfig1-dev libfreetype6-dev\n\n## Release History\n\n* 2013-08-02 - v0.4.0 - /34 /18 /24 merged\n* 2013-02-28 - v0.3.0 - Use PhantomJS 1.9.0-1.\n* 2013-02-28 - v0.2.0 - Use PhantomJS 1.8.1.\n* 2012-12-21 - v0.1.0 - Use PhantomJS 1.7.0.\n","readmeFilename":"README.md","_id":"grunt-lib-phantomjs@0.4.0","dist":{"shasum":"b78fa18adf1075617bc915ba5563dd7f3c9731ec","tarball":"http://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-0.4.0.tgz"},"_from":".","_npmVersion":"1.3.7","_npmUser":{"name":"jsoverson","email":"jsoverson@gmail.com"},"maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"},{"name":"jsoverson","email":"jsoverson@gmail.com"},{"name":"tkellen","email":"tyler@sleekcode.net"}],"directories":{}},"0.5.0":{"name":"grunt-lib-phantomjs","description":"Grunt and PhantomJS, sitting in a tree.","version":"0.5.0","homepage":"http://github.com/gruntjs/grunt-lib-phantomjs","author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"bugs":{"url":"https://github.com/gruntjs/grunt-lib-phantomjs/issues"},"licenses":[{"type":"MIT","url":"http://github.com/gruntjs/grunt-lib-phantomjs/blob/master/LICENSE-MIT"}],"engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"eventemitter2":"~0.4.9","semver":"~1.0.14","temporary":"~0.0.4","phantomjs":"~1.9.0-1"},"devDependencies":{"grunt-contrib-jshint":"~0.6.2","grunt":"~0.4.0","difflet":"~0.2.3","express":"~3.1.1"},"main":"lib/phantomjs","files":["lib","phantomjs"],"readme":"# grunt-lib-phantomjs\n\n> Grunt and PhantomJS, sitting in a tree.\n\n## Usage\n\nThe best way to understand how this lib should be used is by looking at the [grunt-contrib-qunit](https://github.com/gruntjs/grunt-contrib-qunit) plugin. Mainly, look at how [the lib is required](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L17), how [event handlers are bound](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L61-L144) and how [PhantomJS is actually spawned](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L177-L190).\n\nAlso, in the case of the grunt-contrib-qunit plugin, it's important to know that the page being loaded into PhantomJS *doesn't* know it will be loaded into PhantomJS, and as such doesn't have any PhantomJS->Grunt code in it. That communication code, aka. the [\"bridge\"](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/phantomjs/bridge.js), is dynamically [injected into the html page](https://github.com/gruntjs/grunt-contrib-qunit/blob/d99291713d32f84e50303d6e51eb2dab40b1deb6/tasks/qunit.js#L152).\n\n### Options\n\n* `timeout`: PhantomJS' timeout, in milliseconds.\n* `inject`: JavaScript to inject into the page.\n* `page`: an object of options for the PhantomJS [`page` object](https://github.com/ariya/phantomjs/wiki/API-Reference-WebPage).\n\n## An inline example\n\nIf a Grunt task looked something like this:\n\n```js\ngrunt.registerTask('mytask', 'Integrate with phantomjs.', function() {\n  var phantomjs = require('grunt-lib-phantomjs').init(grunt);\n  var errorCount = 0;\n\n  // Handle any number of namespaced events like so.\n  phantomjs.on('mytask.ok', function(msg) {\n    grunt.log.writeln(msg);\n  });\n\n  phantomjs.on('mytask.error', function(msg) {\n    errorCount++;\n    grunt.log.error(msg);\n  });\n\n  // Create some kind of \"all done\" event.\n  phantomjs.on('mytask.done', function() {\n    phantomjs.halt();\n  });\n\n  // Built-in error handlers.\n  phantomjs.on('fail.load', function(url) {\n    phantomjs.halt();\n    grunt.warn('PhantomJS unable to load URL.');\n  });\n\n  phantomjs.on('fail.timeout', function() {\n    phantomjs.halt();\n    grunt.warn('PhantomJS timed out.');\n  });\n\n  // This task is async.\n  var done = this.async();\n\n  // Spawn phantomjs\n  phantomjs.spawn('test.html', {\n    // Additional PhantomJS options.\n    options: {},\n    // Complete the task when done.\n    done: function(err) {\n      done(err || errorCount === 0);\n    }\n  });\n\n});\n```\n\nAnd `test.html` looked something like this (note the \"bridge\" is hard-coded into this page and not injected):\n\n```html\n<!doctype html>\n<html>\n<head>\n<script>\n\n// Send messages to the parent PhantomJS process via alert! Good times!!\nfunction sendMessage() {\n  var args = [].slice.call(arguments);\n  alert(JSON.stringify(args));\n}\n\nsendMessage('mytask.ok', 'Something worked.');\nsendMessage('mytask.error', 'Something failed.');\nsendMessage('mytask.done');\n\n</script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThen running Grunt would behave something like this:\n\n```shell\n$ grunt mytask\nRunning \"mytask\" task\nSomething worked.\n>> Something failed.\nWarning: Task \"mytask\" failed. Use --force to continue.\n\nAborted due to warnings.\n```\n\n## OS Dependencies\nPhantomJS requires these dependencies\n**On Ubuntu/Debian**\n  apt-get install libfontconfig1 fontconfig libfontconfig1-dev libfreetype6-dev\n\n## Release History\n\n* 2013-08-02 - v0.4.0 - /34 /18 /24 merged\n* 2013-02-28 - v0.3.0 - Use PhantomJS 1.9.0-1.\n* 2013-02-28 - v0.2.0 - Use PhantomJS 1.8.1.\n* 2012-12-21 - v0.1.0 - Use PhantomJS 1.7.0.\n","readmeFilename":"README.md","_id":"grunt-lib-phantomjs@0.5.0","dist":{"shasum":"dfc6bd5ba01cd0234c4920c9154a4654392eeaae","tarball":"http://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-0.5.0.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"jzaefferer","email":"joern.zaefferer@gmail.com"},"maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"},{"name":"jsoverson","email":"jsoverson@gmail.com"},{"name":"tkellen","email":"tyler@sleekcode.net"},{"name":"jzaefferer","email":"joern.zaefferer@gmail.com"}],"directories":{}}},"readme":"# grunt-lib-phantomjs (unreleased, for grunt v0.4.0a)\n\n> Grunt and PhantomJS, sitting in a tree.\n","maintainers":[{"name":"cowboy","email":"cowboy@rj3.net"},{"name":"jsoverson","email":"jsoverson@gmail.com"},{"name":"tkellen","email":"tyler@sleekcode.net"},{"name":"jzaefferer","email":"joern.zaefferer@gmail.com"}],"time":{"0.1.0":"2013-02-18T17:27:01.869Z","0.2.0":"2013-02-28T15:48:13.855Z","0.3.0":"2013-04-04T17:03:32.646Z","0.3.1":"2013-05-29T15:01:44.889Z","0.4.0":"2013-09-02T17:56:50.534Z","0.5.0":"2014-01-17T10:11:47.448Z"},"author":{"name":"Grunt Team","url":"http://gruntjs.com/"},"repository":{"type":"git","url":"git://github.com/gruntjs/grunt-lib-phantomjs.git"},"_attachments":{"grunt-lib-phantomjs-0.5.0.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-Iwj6bxirM5T2X4anL7gS0g==","length":5389,"stub":true},"grunt-lib-phantomjs-0.4.0.tgz":{"content_type":"application/octet-stream","revpos":12,"digest":"md5-dXgg11KpB3CpJUP2QKzl/g==","length":5258,"stub":true},"grunt-lib-phantomjs-0.3.1.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-zUcNgnIrmz+pabmMGa8sbQ==","length":6913,"stub":true},"grunt-lib-phantomjs-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":8,"digest":"md5-pwVYX6/JOU9776hdIuaXZg==","length":6832,"stub":true},"grunt-lib-phantomjs-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-HHRodCPxq+ZfQyAxaOUlVw==","length":6046,"stub":true},"grunt-lib-phantomjs-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-w16dMslJpBmJRQyf5MRLdg==","length":5120,"stub":true}},"_etag":"\"DL2SP9KNIZ68WCRE86R7FAEDO\""}