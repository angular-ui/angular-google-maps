{"_id":"request-progress","_rev":"21-db2e5a761565c14c8b6bdcc757c86f11","name":"request-progress","description":"Tracks the download progress of a request made with mikeal/request","dist-tags":{"latest":"0.3.1"},"versions":{"0.1.0":{"name":"request-progress","version":"0.1.0","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress\n\n[![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png')), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 10000ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.1.0","dist":{"shasum":"459d0c873ca678ce6d93f8e72d2be880a1e9775a","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.1.0.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.1.1":{"name":"request-progress","version":"0.1.1","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png')), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 10000ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.1.1","dist":{"shasum":"2a0d13ecb5349aa8151b14bcf8fc50387f8d74b1","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.1.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.2.0":{"name":"request-progress","version":"0.2.0","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 0ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.2.0","dist":{"shasum":"f5115288b89bf86e1973717b507f890f93188f1a","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.2.0.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.2.1":{"name":"request-progress","version":"0.2.1","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 0ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.2.1","dist":{"shasum":"878c61d62f72ba35f0d4c70b4464c9de2b9eb106","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.2.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.2.2":{"name":"request-progress","version":"0.2.2","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 0ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.2.2","dist":{"shasum":"72dab596274ddef4b62f01dc5248eba590ffedb8","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.2.2.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.2.3":{"name":"request-progress","version":"0.2.3","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 0ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.2.3","dist":{"shasum":"5be7088f66642e2739e9058a07cceef0c2868b8b","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.2.3.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.0":{"name":"request-progress","version":"0.3.0","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 0ms\n})\n.on('progress', function (state) {\n    console.log('received size in bytes', state.received);\n    // The properties bellow can be null if response does not contain\n    // the content-length header\n    console.log('total size in bytes', state.total);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.3.0","dist":{"shasum":"bdf2062bfc197c5d492500d44cb3aff7865b492e","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}},"0.3.1":{"name":"request-progress","version":"0.3.1","description":"Tracks the download progress of a request made with mikeal/request","main":"index.js","dependencies":{"throttleit":"~0.0.2"},"devDependencies":{"mocha":"~1.12.0","expect.js":"~0.2.0"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"bugs":{"url":"http://github.com/IndigoUnited/node-request-progress/issues"},"keywords":["progress","request","mikeal","size","bytes","percent","percentage"],"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"license":"MIT","readme":"# request-progress [![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 0ms\n})\n.on('progress', function (state) {\n    console.log('received size in bytes', state.received);\n    // The properties bellow can be null if response does not contain\n    // the content-length header\n    console.log('total size in bytes', state.total);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","readmeFilename":"README.md","_id":"request-progress@0.3.1","dist":{"shasum":"0721c105d8a96ac6b2ce8b2c89ae2d5ecfcf6b3a","tarball":"http://registry.npmjs.org/request-progress/-/request-progress-0.3.1.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"satazor","email":"andremiguelcruz@msn.com"},"maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"directories":{}}},"readme":"# request-progress\n\n[![Build Status](https://secure.travis-ci.org/IndigoUnited/node-request-progress.png)](http://travis-ci.org/IndigoUnited/node-request-progress.png)\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request).\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// Note that the options argument is optional\nprogress(request('http://google.com/doodle.png')), {\n    throttle: 2000,  // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000      // Only start to emit after 1000ms delay, defaults to 10000ms\n})\n.on('progress', function (state) {\n    console.log('total size in bytes', state.total);\n    console.log('received size in bytes', state.received);\n    console.log('percent', state.percent);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'))\n.on('error', function (err) {\n    // Do something with err\n})\n.on('close', function (err) {\n    // Saved to doogle.png!\n})\n```\n\nNote that the `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n","maintainers":[{"name":"satazor","email":"andremiguelcruz@msn.com"}],"time":{"0.1.0":"2013-07-14T09:33:58.434Z","0.1.1":"2013-07-14T10:21:18.314Z","0.2.0":"2013-07-14T10:45:08.990Z","0.2.1":"2013-07-14T16:08:38.389Z","0.2.2":"2013-08-01T08:46:51.390Z","0.2.3":"2013-08-01T13:00:32.105Z","0.3.0":"2013-08-28T21:31:00.337Z","0.3.1":"2013-08-28T21:36:42.860Z"},"author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"repository":{"type":"git","url":"git://github.com/IndigoUnited/node-request-progress"},"_attachments":{"request-progress-0.3.1.tgz":{"content_type":"application/octet-stream","revpos":20,"digest":"md5-EPMwfHnEcA2m7V/Msquqfw==","length":3058,"stub":true},"request-progress-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-KbPJdXYddMyNrpxMxWxzcQ==","length":3051,"stub":true},"request-progress-0.2.3.tgz":{"content_type":"application/octet-stream","revpos":16,"digest":"md5-Y+MW8TBnEb9DVG0Xn3EIow==","length":2892,"stub":true},"request-progress-0.2.2.tgz":{"content_type":"application/octet-stream","revpos":14,"digest":"md5-b4bejaJq+fBFbUERJV/3bQ==","length":2888,"stub":true},"request-progress-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":12,"digest":"md5-ES5YsnaJJ86CTNrbJQwlbw==","length":2884,"stub":true},"request-progress-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":10,"digest":"md5-GrFOfbeOgex0Lk/NHueFDQ==","length":2842,"stub":true},"request-progress-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":4,"digest":"md5-ZiaNjy7pm3NA1ZkGfqC9AQ==","length":2851,"stub":true},"request-progress-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":2,"digest":"md5-CAvRIhrHmjmQ7Vmv6DgO8w==","length":2730,"stub":true}},"_etag":"\"DEZTINRWR7SMOWW48FGBODZ1N\""}