{"_id":"mime","_rev":"70-80702ee905d4afe8bb92d1f5423709b7","name":"mime","description":"A comprehensive library for mime-type mapping","dist-tags":{"latest":"1.2.11"},"versions":{"1.0.0":{"name":"mime","description":"A super simple utility library for dealing with mime-types","url":"http://github.com/bentomas/node-mime","keywords":["util","mime"],"author":{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org"},"contributors":[],"dependencies":{},"lib":".","main":"mime","version":"1.0.0","_id":"mime@1.0.0","engines":{"node":"*"},"_nodeSupported":true,"_npmVersion":"0.2.7-2","_nodeVersion":"v0.3.1-pre","dist":{"tarball":"http://registry.npmjs.org/mime/-/mime-1.0.0.tgz","shasum":"0650d4779569617b3ee8bec7b8b7522e74af05be"},"directories":{}},"1.1.0":{"name":"mime","description":"A super simple utility library for dealing with mime-types","url":"http://github.com/bentomas/node-mime","keywords":["util","mime"],"author":{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org"},"contributors":[],"dependencies":{},"lib":".","main":"mime","version":"1.1.0","_id":"mime@1.1.0","engines":{"node":"*"},"_nodeSupported":true,"_npmVersion":"0.2.7-2","_nodeVersion":"v0.3.1-pre","dist":{"tarball":"http://registry.npmjs.org/mime/-/mime-1.1.0.tgz","shasum":"a067f5be8a6c9eeb83f3733c8c22dd142a603add"},"directories":{}},"1.2.1":{"name":"mime","description":"A comprehensive library for mime-type mapping","url":"http://github.com/bentomas/node-mime","keywords":["util","mime"],"author":{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org"},"contributors":[],"dependencies":{},"lib":".","main":"mime","version":"1.2.1","_id":"mime@1.2.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"0.2.16","_nodeVersion":"v0.3.1","directories":{},"modules":{"README.md":"README.md","index.js":"index.js","package.json":"package.json","mime.js":"mime.js","node.types":"node.types","mime.types":"mime.types","test.js":"test.js"},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"9876d4db9491091d154288a32893564839b8e04e","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.1.tgz"}},"1.2.2":{"name":"mime","description":"A comprehensive library for mime-type mapping","url":"http://github.com/bentomas/node-mime","keywords":["util","mime"],"author":{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org"},"contributors":[],"dependencies":{},"lib":".","main":"mime.js","version":"1.2.2","devDependencies":{},"_id":"mime@1.2.2","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.6","_defaultsLoaded":true,"dist":{"shasum":"b9d6355bf53e8d7d56693130e451daff340148cf","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.2.tgz"},"scripts":{},"directories":{}},"1.2.3":{"name":"mime","description":"A comprehensive library for mime-type mapping","url":"http://github.com/bentomas/node-mime","keywords":["util","mime"],"author":{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org"},"contributors":[],"dependencies":{},"lib":".","main":"mime.js","version":"1.2.3","_npmJsonOpts":{"file":"/home/kieffer/.npm/mime/1.2.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"mime@1.2.3","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.6","_defaultsLoaded":true,"dist":{"shasum":"7717bad7444f42d0c7d98cdc2a7b20068f837b68","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.3.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.4":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{"async_testing":""},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"git://github.com/bentomas/node-mime.git","type":"git"},"version":"1.2.4","_npmJsonOpts":{"file":"/home/kieffer/.npm/mime/1.2.4/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"mime@1.2.4","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.6","_defaultsLoaded":true,"dist":{"shasum":"11b5fdaf29c2509255176b80ad520294f5de92b7","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.4.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.5":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"git://github.com/bentomas/node-mime.git","type":"git"},"version":"1.2.5","_npmUser":{"name":"broofa","email":"robert@broofa.com"},"_id":"mime@1.2.5","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.6","_defaultsLoaded":true,"dist":{"shasum":"9eed073022a8bf5e16c8566c6867b8832bfbfa13","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.5.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.6":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"git://github.com/broofa/node-mime.git","type":"git"},"version":"1.2.6","_npmUser":{"name":"bentomas","email":"benjamin@benjaminthomas.org"},"_id":"mime@1.2.6","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.12","_nodeVersion":"v0.6.14","_defaultsLoaded":true,"dist":{"shasum":"b1f86c768c025fa87b48075f1709f28aeaf20365","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.6.tgz"},"readme":"# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n    var mime = require('mime');\n\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\n    mime.lookup('file.txt');                  // => 'text/plain'\n    mime.lookup('.TXT');                      // => 'text/plain'\n    mime.lookup('htm');                       // => 'text/html'\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension('text/html');                 // => 'html'\n    mime.extension('application/octet-stream');  // => 'bin'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/bentomas/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n    });\n\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension('text/x-some-format'); // => 'x-sf'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types');\n\nThe .types file format is simple -  See the `types` dir for examples.\n","maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.7":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"https://github.com/broofa/node-mime","type":"git"},"version":"1.2.7","readme":"# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n    var mime = require('mime');\n\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\n    mime.lookup('file.txt');                  // => 'text/plain'\n    mime.lookup('.TXT');                      // => 'text/plain'\n    mime.lookup('htm');                       // => 'text/html'\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension('text/html');                 // => 'html'\n    mime.extension('application/octet-stream');  // => 'bin'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n    });\n\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension('text/x-some-format'); // => 'x-sf'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types');\n\nThe .types file format is simple -  See the `types` dir for examples.\n","_id":"mime@1.2.7","dist":{"shasum":"c7a13f33a7073d9900f288436b06b3a16200865b","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.7.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.8":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"https://github.com/broofa/node-mime","type":"git"},"version":"1.2.8","readme":"# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n    var mime = require('mime');\n\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\n    mime.lookup('file.txt');                  // => 'text/plain'\n    mime.lookup('.TXT');                      // => 'text/plain'\n    mime.lookup('htm');                       // => 'text/html'\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension('text/html');                 // => 'html'\n    mime.extension('application/octet-stream');  // => 'bin'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n    });\n\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension('text/x-some-format'); // => 'x-sf'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types');\n\nThe .types file format is simple -  See the `types` dir for examples.\n","_id":"mime@1.2.8","dist":{"shasum":"59178be248b0e06df58f6e04db3c8ee30084e110","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.8.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.9":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"https://github.com/broofa/node-mime","type":"git"},"version":"1.2.9","readme":"# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n    var mime = require('mime');\n\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\n    mime.lookup('file.txt');                  // => 'text/plain'\n    mime.lookup('.TXT');                      // => 'text/plain'\n    mime.lookup('htm');                       // => 'text/html'\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension('text/html');                 // => 'html'\n    mime.extension('application/octet-stream');  // => 'bin'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n    });\n\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension('text/x-some-format'); // => 'x-sf'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types');\n\nThe .types file format is simple -  See the `types` dir for examples.\n","_id":"mime@1.2.9","dist":{"shasum":"009cd40867bd35de521b3b966f04e2f8d4d13d09","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.9.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.10":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"https://github.com/broofa/node-mime","type":"git"},"version":"1.2.10","readme":"# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n    var mime = require('mime');\n\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\n    mime.lookup('file.txt');                  // => 'text/plain'\n    mime.lookup('.TXT');                      // => 'text/plain'\n    mime.lookup('htm');                       // => 'text/html'\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension('text/html');                 // => 'html'\n    mime.extension('application/octet-stream');  // => 'bin'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n    });\n\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension('text/x-some-format'); // => 'x-sf'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types');\n\nThe .types file format is simple -  See the `types` dir for examples.\n","_id":"mime@1.2.10","dist":{"shasum":"066380acbc3d78d4f4a51004d8988425dc68b9b1","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.10.tgz"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}},"1.2.11":{"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"contributors":[{"name":"Benjamin Thomas","email":"benjamin@benjaminthomas.org","url":"http://github.com/bentomas"}],"dependencies":{},"description":"A comprehensive library for mime-type mapping","devDependencies":{},"keywords":["util","mime"],"main":"mime.js","name":"mime","repository":{"url":"https://github.com/broofa/node-mime","type":"git"},"version":"1.2.11","readme":"# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n    var mime = require('mime');\n\n    mime.lookup('/path/to/file.txt');         // => 'text/plain'\n    mime.lookup('file.txt');                  // => 'text/plain'\n    mime.lookup('.TXT');                      // => 'text/plain'\n    mime.lookup('htm');                       // => 'text/html'\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension('text/html');                 // => 'html'\n    mime.extension('application/octet-stream');  // => 'bin'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup('text/plain');        // => 'UTF-8'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n        'application/x-my-type': ['x-mt', 'x-mtt'],\n        // etc ...\n    });\n\n    mime.lookup('x-sft');                 // => 'text/x-some-format'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension('text/x-some-format'); // => 'x-sf'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n    mime.load('./my_project.types');\n\nThe .types file format is simple -  See the `types` dir for examples.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/broofa/node-mime/issues"},"_id":"mime@1.2.11","dist":{"shasum":"58203eed86e3a5ef17aed2b7d9ebd47f0a60dd10","tarball":"http://registry.npmjs.org/mime/-/mime-1.2.11.tgz"},"_from":".","_npmVersion":"1.3.6","_npmUser":{"name":"broofa","email":"robert@broofa.com"},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"directories":{}}},"maintainers":[{"name":"broofa","email":"robert@broofa.com"},{"name":"bentomas","email":"benjamin@benjaminthomas.org"}],"author":{"name":"Robert Kieffer","email":"robert@broofa.com","url":"http://github.com/broofa"},"time":{"1.0.0":"2011-01-20T16:27:31.008Z","1.1.0":"2011-01-20T16:27:31.008Z","1.2.1":"2011-01-20T16:27:31.008Z","1.2.2":"2011-05-09T11:56:13.470Z","1.2.3":"2011-09-07T13:19:46.375Z","1.2.4":"2011-09-18T12:00:16.878Z","1.2.5":"2012-02-16T14:14:57.547Z","1.2.6":"2012-06-26T15:32:22.315Z","1.2.7":"2012-07-19T22:34:29.843Z","1.2.8":"2013-01-10T18:31:25.510Z","1.2.9":"2013-01-17T16:59:18.360Z","1.2.10":"2013-07-25T17:03:54.344Z","1.2.11":"2013-08-15T17:46:51.772Z"},"repository":{"url":"https://github.com/broofa/node-mime","type":"git"},"users":{"dresende":true,"broofa":true,"yazgazan":true,"fgribreau":true,"m42am":true,"chevex":true,"dannydulai":true,"kastor":true,"meryn":true,"dubban":true,"charmander":true,"lexa":true,"spekkionu":true,"einfallstoll":true},"_attachments":{"mime-1.2.11.tgz":{"content_type":"application/octet-stream","revpos":65,"digest":"md5-qWolATv0aThozrbXWYMXTQ==","length":20312,"stub":true},"mime-1.2.10.tgz":{"content_type":"application/octet-stream","revpos":63,"digest":"md5-BDOTlFeXx7H/t3cRaFGqbQ==","length":20260,"stub":true},"mime-1.2.9.tgz":{"content_type":"application/octet-stream","revpos":55,"digest":"md5-QIAemMEQdRnrjiNAGfZESg==","length":19614,"stub":true},"mime-1.2.8.tgz":{"content_type":"application/octet-stream","revpos":53,"digest":"md5-H9E+TmqvAImwz5UfadZRug==","length":19854,"stub":true},"mime-1.2.7.tgz":{"content_type":"application/octet-stream","revpos":46,"digest":"md5-K8Q7XAUiTFszTPTRDocotQ==","length":19424,"stub":true},"mime-1.2.6.tgz":{"content_type":"application/octet-stream","revpos":44,"digest":"md5-DQttCzRj2RTn/HSli7Tm4w==","length":17648,"stub":true},"mime-1.2.5.tgz":{"content_type":"application/octet-stream","revpos":41,"digest":"md5-i4Rqjb7uNGQBg1WebRBENA==","length":17188,"stub":true},"mime-1.2.4.tgz":{"content_type":"application/octet-stream","revpos":37,"digest":"md5-2wcXt/vU5y8v9mPPgHkipw==","length":17038,"stub":true},"mime-1.2.3.tgz":{"content_type":"application/octet-stream","revpos":31,"digest":"md5-W2RauFT2YSDRf2eEtbo5UA==","length":16802,"stub":true},"mime-1.2.2.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-Ji0AzYRZDRVHDjUdVvjaeg==","length":16530,"stub":true},"mime-1.2.1.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-GIxkzt/dKX61lY1sjNin1Q==","length":14642,"stub":true},"mime-1.1.0.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-RAGldb63gMsKArMcoD9mJQ==","length":13943,"stub":true},"mime-1.0.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-Uc++aH9sIikW/ffOtvlNfg==","length":3761,"stub":true}},"_etag":"\"9DHGN1KNLT696DDKM15JTDZP3\""}